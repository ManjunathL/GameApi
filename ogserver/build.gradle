/*
 * Grade build file to generate builds for OG Server
 * By Sunil at '9/20/15 5:29 AM' with Gradle 2.7
 *
 */

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.2'
}

version = '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8
import com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer
import org.apache.tools.ant.taskdefs.condition.Os

// In this section you declare where to find the dependencies of your project
repositories
        {
            jcenter()
            mavenCentral()
        }

if (!JavaVersion.current().java8Compatible) {
    throw new IllegalStateException('''OG Server:
                                      |  This needs Java 8,
                                      |  You are using something else,
                                      |  Refresh. Try again.'''.stripMargin())
}


task gulp(type: Exec) {

    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        executable "cmd"
        args "/c", "run_gulp.bat"
    } else {
        executable "bash"
        args "run_gulp"
    }

    standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
    doLast {
        println gulp.output()
    }
}
processResources.finalizedBy gulp

shadowJar {
    manifest {
        attributes 'Implementation-Title': 'mygubbi Java Server',
                'Implementation-Version': version,
                'Main-Class': 'com.mygubbi.ServerVerticle'
    }
    transform(ServiceFileTransformer) {
        path = 'META-INF/services'
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.slf4j:slf4j-log4j12:1.7.12'
    compile 'io.vertx:vertx-core:3.1.0'
    compile 'io.vertx:vertx-web:3.1.0'
    compile 'io.vertx:vertx-jdbc-client:3.1.0'
    compile 'io.vertx:vertx-sql-common:3.1.0'
    compile 'io.vertx:vertx-hazelcast:3.1.0'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.3'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.3'
    compile 'commons-lang:commons-lang:2.6'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.google.inject:guice:4.0'
    compile 'org.apache.poi:poi:3.12'
    compile 'org.apache.poi:poi-ooxml:3.12'
    compile 'mysql:mysql-connector-java:5.1.38'
    compile 'org.apache.shiro:shiro-core:1.2.4'
    compile 'com.google.inject:guice-parent:4.0'
    compile 'com.cloudinary:cloudinary-http44:1.2.2'
    compile 'com.sendgrid:sendgrid-java:2.2.1'
    compile 'org.apache.velocity:velocity:1.7'
    compile 'commons-fileupload:commons-fileupload:1.3.1'
    compile 'org.elasticsearch:elasticsearch:1.7.4'
    compile 'org.codehaus.groovy:groovy-all:2.4.4'
    compile 'org.apache.lucene:lucene-expressions:4.10.4'

    compile 'org.apache.poi:poi:3.12'

    compile fileTree(include: ['*.jar'], dir: 'libs')

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testCompile 'io.vertx:vertx-unit:3.1.0'
}
