{
  "queries": [
    {
      "id": "proposal.list.status",
      "type": "select",
      "table": "proposal",
      "query": "select id, crmId, version, quoteNo, quoteNoNew, title, status, salesName, designerName,designPartnerName, amount, projectName, pcity, createdOn, createdBy, updatedOn, updatedBy from proposal where status = ?",
      "params": ["status"]
    },

    {
      "id": "proposal.list.all",
      "type": "select",
      "table": "proposal",
      "query": "select 'W' as editFlag, id, crmId, version, quoteNo, quoteNoNew, title, status, salesName, designerName,designPartnerName, amount, projectName, pcity, createdOn, createdBy, updatedOn, updatedBy from proposal where status != 'deleted'",
      "params": []
    },

    {
      "id": "proposal.list.sales",
      "type": "select",
      "table": "proposal",
      "query": "select IF(salesEmail = ?, 'W', 'R') as editFlag, id, crmId, version, quoteNo, quoteNoNew, title, status, salesName, designerName,designPartnerName, amount, projectName, pcity, createdOn, createdBy, updatedOn, updatedBy from proposal where status != 'deleted'",
      "params": ["userId"]
    },

    {
      "id": "proposal.list.designer",
      "type": "select",
      "table": "proposal",
      "query": "select IF(designerEmail = ?, 'W', 'R') as editFlag, id, crmId, version, quoteNo, quoteNoNew, title, status, salesName, designerName,designPartnerName, amount, projectName, pcity, createdOn, createdBy, updatedOn, updatedBy from proposal where status != 'deleted'",
      "params": ["userId"]
    },

    {
      "id": "proposal.list.designpartner",
      "type": "select",
      "table": "proposal",
      "query": "select id, crmId, version, quoteNo, quoteNoNew, title, status, salesName, designerName, designPartnerName, amount, projectName, pcity, createdOn, createdBy, updatedOn, updatedBy from proposal where designPartnerEmail = ?",
      "params": ["designPartnerEmail"]
    },

    {
      "id": "proposal.list.crmid",
      "type": "select",
      "table": "proposal",
      "query": "select crmId from proposal where status != 'deleted'",
      "params": []
    },


    {
      "id": "proposal.updateversion",
      "type": "update",
      "table": "version_master",
      "query": "update version_master set title = ?,finalAmount = ? , status = ? , internalStatus = ?, remarks = ? , fromVersion = ? , discountAmount = ? , discountPercentage = ? , amount = ?, profit = ? , margin = ?, amountWotax = ?, manufactureAmount = ?, ignoreAndPublishFlag = ?, remarksIgnore = ? where version = ? and proposalId = ? ",
      "params": ["title","finalAmount", "status", "internalStatus", "remarks","fromVersion" , "discountAmount" , "discountPercentage","amount","profit","margin", "amountWotax", "manufactureAmount","ignoreAndPublishFlag","remarksIgnore","version","proposalId"]
    },

    {
      "id": "proposal.summary",
      "type": "select",
      "table": "proposal",
      "query": "select status, count(*) as proposal_count from proposal where status = 'deleted' group by status",
      "params": []
    },
    {
      "id": "proposal.header",
      "type": "select",
      "table": "proposal",
      "query": "select * from proposal where id = ?",
      "params": ["id"]
    },

    {
      "id": "proposal.create",
      "type": "insert",
      "table": "proposal",
      "query": "insert into proposal(status, title, version, createdBy, crmId) values ('Deleted', '', '0.1', ?, ?)",
      "params": ["createdBy","opportunityId"]
    },

    {
      "id": "proposal.create.crm",
      "type": "insert",
      "table": "proposal",
      "query": "insert into proposal(status, title, version, createdBy, crmId, cname, designerName, salesExecName,fullJson) values ('draft', ?, '1.0', ?, ?, ?, ?, ?, ?)",
      "params": ["title", "createdBy","opportunityId", "designerName", "salesExecName", "fullJson" ]
    },

    {
      "id": "proposal.select.updateprice",
      "type": "select",
      "table": "proposal",
      "query": "select id,status,version,crmId,pcity,quoteNo,title,quoteNoNew,priceDate from proposal where id = ?",
      "params": ["proposalId" ]
    },

    {
      "id": "proposal.version.select.updateprice",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where proposalId in (select pr.id from proposal pr where pr.id not in (select vm.proposalId from version_master vm where vm.status = 'Confirmed'))",
      "params": [ ]
    },

    {
      "id": "proposal.version.getdraftversion",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where proposalId = ?",
      "params": ["id"]
    },
     {
      "id": "proposal.version.products.select",
      "type": "select",
      "table": "proposal_product",
      "query": "select * from proposal_product where proposalId = ? and fromVersion = ? and active = 'A'",
      "params": [ "proposalId","version"],
       "jsonfields":["modules", "addons"]
    },

    {
      "id": "proposal.version.addons.select",
      "type": "select",
      "table": "proposal_addon",
      "query": "select * from proposal_addon where proposalId = ? and fromVersion = ?",
      "params": [ "proposalId","version"]
    },

    {
      "id": "proposal.version.price.update",
      "type": "update",
      "table": "proposal",
      "query": "update version_master set amount = ?, finalAmount = ?, discountAmount = ? where id = ?",
      "params": ["amount", "finalAmount", "discountAmount", "id" ]
    },
    {
      "id": "proposalproduct.updateprice.select",
      "type": "select",
      "table": "proposal",
      "query": "select * from proposal_product where active = 'A' ",
      "params": []
    },

    {
      "id": "proposaladdon.updateprice.select",
      "type": "select",
      "table": "proposal",
      "query": "select * from proposal_product where active = 'A' ",
      "params": []
    },

    {
      "id": "proposal.audit.insert",
      "type": "insert",
      "table": "audit_master",
      "query": "insert into audit_master(proposalId,version,priceDate,oldAmountProduct,newAmountProduct) values( ?, ?, ?, ?, ?) ",
      "params": ["proposalId","version","priceDate","oldAmountProduct","newAmountProduct"]
    },

    {
      "id": "proposal.audit.addon.update",
      "type": "update",
      "table": "audit_master",
      "query": "update audit_master set oldAmountAddon = ?, newAmountAddon = ? where proposalId = ? and version = ?",
      "params": ["oldAmountAddon","newAmountAddon","proposalId","version"]
    },

    {
      "id": "version.createdraft",
      "type": "insert",
      "table": "version_master",
      "query": "insert into version_master(version, fromVersion, proposalId, title, status, internalStatus, finalAmount, remarks,discountAmount,discountPercentage,amount,profit,margin,amountWotax,manufactureAmount) values (0.1, ?, ?, ?, 'Draft', 'Draft', 0.0, '',0.0,0.0,0.0,0.0,0.0,0.0,0.0)",
      "params": ["fromVersion", "proposalId", "title"]
    },

    {
      "id": "version.createPostSalesInitial",
      "type": "insert",
      "table": "version_master",
      "query": "insert into version_master(version, fromVersion, proposalId, title, status, internalStatus, finalAmount, remarks,discountAmount,discountPercentage,amount,profit,margin,amountWotax,manufactureAmount) values (1.0, ?, ?, ? , 'Draft', 'Draft', 0.0, 'Provide Option Description',0.0,0.0,0.0,0.0,0.0,0.0,0.0)",
      "params": ["fromVersion", "proposalId", "title"]
    },

    {
      "id": "proposal.update",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set title = ?, crmId = ?, quoteNo = ?, quoteNoNew = ?, cname = ?, caddress1 = ?, caddress2 = ?, caddress3 = ?, ccity = ?, cemail = ?, cphone1 = ?, cphone2 = ?, projectName = ?, paddress1 = ?, paddress2 = ?, pcity = ?, salesName = ?, salesEmail = ?, salesPhone = ?,  designerName = ?, designerEmail = ?, designerPhone = ?, designPartnerName = ?, designPartnerEmail = ?, designPartnerPhone = ?, amount = ?, updatedBy = ?, status = ?, version = ?,maxDiscountPercentage = ?,packageFlag = ?,adminPackageFlag = ?, offerType=?,fromProposal = ?,fromVersion=?  where id = ?",
      "params": ["title", "crmId", "quoteNo", "quoteNoNew", "cname", "caddress1", "caddress2", "caddress3", "ccity", "cemail", "cphone1", "cphone2", "projectName", "paddress1", "paddress2", "pcity", "salesName", "salesEmail", "salesPhone", "designerName", "designerEmail", "designerPhone", "designPartnerName", "designPartnerEmail", "designPartnerPhone", "amount", "updatedBy", "status", "version","maxDiscountPercentage" ,"packageFlag","adminPackageFlag","offerType","fromProposal","fromVersion","id"]
    },

    {
      "id": "proposal.update.onconfirm",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set title = ?, crmId = ?, quoteNo = ?, quoteNoNew = ?, cname = ?, caddress1 = ?, caddress2 = ?, caddress3 = ?, ccity = ?, cemail = ?, cphone1 = ?, cphone2 = ?, projectName = ?, paddress1 = ?, paddress2 = ?, pcity = ?, salesName = ?, salesEmail = ?, salesPhone = ?,  designerName = ?, designerEmail = ?, designerPhone = ?, designPartnerName = ?, designPartnerEmail = ?, designPartnerPhone = ?, amount = ?, updatedBy = ?, status = ?, version = ?, maxDiscountPercentage=?, priceDate = ? ,packageFlag = ? where id = ?",
      "params": ["title", "crmId", "quoteNo", "quoteNoNew", "cname", "caddress1", "caddress2", "caddress3", "ccity", "cemail", "cphone1", "cphone2", "projectName", "paddress1", "paddress2", "pcity", "salesName", "salesEmail", "salesPhone", "designerName", "designerEmail", "designerPhone", "designPartnerName", "designPartnerEmail", "designPartnerPhone", "amount", "updatedBy", "status", "version","maxDiscountPercentage", "priceDate","packageFlag","id"]
    },

    {
      "id": "proposal.folder.update",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set folderPath = ? where id = ?",
      "params": ["folderPath", "id"]
    },

    {
      "id": "version.publish",
      "type": "update",
      "table": "proposal",
      "query": "update version_master set status = 'Published', internalStatus = 'Published',businessDate=? where version = ? and proposalId = ?",
      "params": ["businessDate","version","proposalId"]
    },

    {
      "id": "version.confirm",
      "type": "update",
      "table": "proposal",
      "query": "update version_master set status = 'Confirmed', internalStatus = 'Confirmed', version = ?, fromVersion = ?,businessDate=? where version = ? and proposalId = ?",
      "params": ["version", "fromVersion","businessDate", "toVersion", "proposalId"]
    },

    {
      "id": "version.designsignoff",
      "type": "update",
      "table": "proposal",
      "query": "update version_master set status = 'DSO', internalStatus = 'DSO', version = ?, fromVersion = ?,businessDate=? where version = ? and proposalId = ?",
      "params": ["version", "fromVersion","businessDate" ,"toVersion", "proposalId"]
    },

    {
      "id": "version.productionsignoff",
      "type": "update",
      "table": "proposal",
      "query": "update version_master set status = 'PSO', internalStatus = 'Locked', version = ?, fromVersion = ?,businessDate=? where version = ? and proposalId = ?",
      "params": ["version", "fromVersion","businessDate", "toVersion", "proposalId"]
    },

    {
      "id": "version.createversion",
      "type": "insert",
      "table": "version_master",
      "query": "insert into version_master(version, fromVersion, proposalId, title, status, internalStatus, finalAmount, remarks,discountPercentage,discountAmount,amount) values (?, ?, ?, ?, ?, ?, ?, ? , ? , ? , ?)",
      "params": ["version","fromVersion","proposalId", "title","status","internalStatus","finalAmount","remarks","discountPercentage","discountAmount","amount"]
    },

    {
      "id": "version.copyversion",
      "type": "insert",
      "table": "version_master",
      "query": "insert into version_master(version, fromVersion, proposalId, title, status, internalStatus, finalAmount, remarks,discountPercentage,discountAmount,amount) values (?, ?, ?, ?, ?, ?, ?, ? , ? , ? , ?)",
      "params": ["version","fromVersion","toVersion", "discountAmount","discountPercentage"]
    },

    {
      "id": "version.lockallpresalesversions",
      "type": "update",
      "table": "version_master",
      "query": "update version_master set internalStatus = ? where version like '0.%' and proposalId = ?",
      "params": ["internalStatus","proposalId"]
    },

    {
      "id": "version.lockallpostsalesversions",
      "type": "update",
      "table": "version_master",
      "query": "update version_master set internalStatus = ? where version like '1.%' and proposalId = ?",
      "params": ["internalStatus","proposalId"]
    },

    {
      "id": "version.lockallversions",
      "type": "update",
      "table": "version_master",
      "query": "update version_master set internalStatus = ? where version like '2.%' and proposalId = ? ",
      "params": ["internalStatus","proposalId"]
    },

    {
      "id": "version.getlatestversion",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where version=(select MAX(version) from version_master where proposalId = ?) and proposalId = ? ",
      "params": ["proposalId","proposalId"]
    },
    {
      "id": "version.getversiondetails",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where proposalId = ? and version = ?",
      "params": ["proposalId","version"]
    },

    {
      "id": "proposal.version.presales",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where version like '0.%' and proposalId = ?",
      "params": ["proposalId"]
    },

    {
      "id": "proposal.version.postsales",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where version like '1.%' and proposalId = ?",
      "params": ["proposalId"]
    },

    {
      "id": "proposal.version.production",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where version like '2.%' and proposalId = ?",
      "params": ["proposalId"]
    },


    {
      "id": "proposal.publish",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set status = 'Published',version = ? where id = ?",
      "params": ["version","id"]
    },

    {
      "id": "proposal.revise",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set status = 'Draft' where id = ?",
      "params": ["id"]
    },
    {
      "id": "proposal.cancel",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set status = 'cancelled' where id = ?",
      "params": ["id"]
    },
    {
      "id": "proposal.delete",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set status = 'deleted' where id = ?",
      "params": ["id"]
    },

    {
      "id": "proposal.comment.insert",
      "type": "insert",
      "table": "proposal_comments",
      "query": "insert into proposal_comments (id, proposalid, comment, userid, username, createdon) values (?, ?, ?, ?, ?, ?)",
      "params": ["id", "proposalid", "comment", "userid", "username", "createdon"]
    },

    {
      "id": "proposal.comment.select",
      "type": "select",
      "table": "proposal_comments",
      "query": "select * from proposal_comments where proposalId = ?",
      "params": ["proposalId"]
    },

    {
      "id": "proposal.document.add",
      "type": "insert",
      "table": "proposal_documents",
      "query": "insert into proposal_documents (proposalId, title, fileName, attachmentType, uploadedBy) values (?, ?, ?, ?, ?)",
      "params": ["proposalId", "title", "fileName", "attachmentType", "uploadedBy"]
    },

    {
      "id": "proposal.document.remove",
      "type": "delete",
      "table": "proposal_documents",
      "query": "delete from proposal_documents where id = ?",
      "params": ["id"]
    },

    {
        "id":"proposal.id",
        "type":"select",
        "table":"proposal",
        "query":"SELECT id FROM proposal ORDER BY id DESC LIMIT 1",
        "params":[]

    },

    {
      "id": "proposal.document.select",
      "type": "select",
      "table": "proposal_documents",
      "query": "select * from proposal_documents where proposalId = ? and productId = 0",
      "params": ["proposalId"]
    },

    {
      "id": "product.document.add",
      "type": "insert",
      "table": "proposal_documents",
      "query": "insert into proposal_documents (proposalId, productId, title, fileName, attachmentType, uploadedBy) values (?, ?, ?, ?, ?, ?)",
      "params":["proposalId", "productId", "title", "fileName", "attachmentType", "uploadedBy"]
    },

    {
      "id": "product.document.select",
      "type": "select",
      "table": "proposal_documents",
      "query": "select * from proposal_documents where productId = ?",
      "params": ["productId"]
    },

    {
      "id": "product.document.remove",
      "type": "delete",
      "table": "proposal_documents",
      "query": "delete from proposal_documents where id = ?",
      "params": ["id"]
    },

    {
      "id": "proposal.version.addon.list",
      "type": "select",
      "table": "proposal_addon",
      "query": "select * from proposal_addon where proposalId = ? and fromVersion = ?",
      "params": ["proposalId","fromVersion"]
    },

    {
      "id": "proposal.addon.selected.detail",
      "type": "select",
      "table": "proposal_addon",
      "query": "select * from proposal_addon where proposalId = ? and id in (?)",
      "params": ["proposalId", "addonIds"]
    },

    {
      "id": "proposal.addon.remove",
      "type": "delete",
      "table": "proposal_addon",
      "query": "delete from proposal_addon where id = ?",
      "params": ["id"]
    },

    {
      "id": "proposal.addon.add",
      "type": "insert",
      "table": "proposal_addon",
      "query": "insert into proposal_addon(proposalId, fromVersion, seq, code, categoryCode, customAddonCategory,productTypeCode, productSubtypeCode, brandCode, product, catalogueCode, title, rate, quantity, amount, uom, updatedBy,remarks, spaceType, roomcode) values (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,? ,? ,? ,?, ?, ?)",
      "params":["proposalId", "fromVersion", "seq", "code", "categoryCode", "customAddonCategory","productTypeCode", "productSubtypeCode", "brandCode", "product", "catalogueCode", "title", "rate", "quantity", "amount", "uom", "updatedBy","remarks", "spaceType", "roomcode"]
    },

    {
      "id": "proposal.addon.list",
      "type": "select",
      "table": "proposal_addon",
      "query": "select * from proposal_addon where proposalId=? and fromVersion=?",
      "params":["proposalId", "fromVersion"]
    },
    {
      "id": "proposal.addon.selectversion",
      "type": "select",
      "table": "proposal_addon",
      "query": "select * from proposal_addon where proposalId=? and fromVersion=?",
      "params":["id", "version"]
    },

    {
      "id": "proposal.addon.update",
      "type": "update",
      "table": "proposal_addon",
      "query": "update proposal_addon set seq = ?,product= ?, code = ?, categoryCode = ?,customAddonCategory=?, productTypeCode = ?, brandCode = ?, catalogueCode = ?, title = ?, rate = ?, quantity = ?, amount = ?, uom = ?, updatedBy = ?, productSubtypeCode = ?, remarks =?, spaceType = ?, roomcode = ? where id = ?",
      "params": ["seq","product","code", "categoryCode","customAddonCategory", "productTypeCode", "brandCode", "catalogueCode", "title", "rate", "quantity", "amount", "uom", "updatedBy","productSubtypeCode","remarks", "spaceType", "roomcode", "id"]
    },

    {
      "id": "proposal.version.addon.update",
      "type": "update",
      "table": "proposal_addon",
      "query": "update proposal_addon set rate = ?, amount = ? where proposalId = ? and fromVersion = ?",
      "params": ["rate", "amount", "proposalId", "version"]
    },

    {
      "id": "module.select.all",
      "type": "select",
      "table": "module_master",
      "query": "select code, width, depth, height, description, imagePath, moduleType, moduleCategory, productCategory, material, unitType, accessoryPackDefault, remarks, handleMandatory, knobMandatory, hingeMandatory, sqftCalculation from module_master",
      "params": []
    },

    //Proposal product line item queries

    {
      "id": "proposal.product.create",
      "type": "insert",
      "table": "proposal_product",
      "query": "insert into proposal_product (proposalId,fromVersion, title, seq,manualSeq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, shutterDesignCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy, costWoAccessories,source,hinge,glass,handleType,handleFinish,knobType,knobFinish,handleImage,knobImage,handleTypeSelection,shutterImage,noOfLengths,handleThickness,handleCode,knobCode,lConnectorPrice, spaceType,productCategoryLocked,colorGroupCode,finishSetId) values (?,?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?, ? ,? , ? , ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, ?,?,?,?)",
      "params": ["proposalId","fromVersion", "title", "seq","manualSeq","type", "roomCode", "productCategoryCode", "catalogueId", "catalogueName", "makeTypeCode",
        "baseCarcassCode", "wallCarcassCode", "finishTypeCode", "finishCode", "shutterDesignCode", "dimension", "quantity", "amount", "quoteFilePath",
        "modules", "addons", "createdBy", "costWoAccessories","source","hinge","glass","handleType","handleFinish","knobType","knobFinish","handleImage","knobImage","handleTypeSelection","shutterImage","noOfLengths","handleThickness","handleCode","knobCode","lConnectorPrice", "spaceType","productCategoryLocked","colorGroupCode","finishSetId"]
    },

    {
      "id": "proposal.product.updateVersionOnConfirm",
      "type": "update",
      "table": "proposal_product",
      "query": "update proposal_product set fromVersion = ? where proposalId = ? and fromVersion = ?",
      "params": ["version","proposalId","fromVersion"]
    },

    {
      "id": "proposal.product.createnew",
      "type": "insert",
      "table": "proposal_product",
      "query": "insert into proposal_product (proposalId,fromVersion, title, seq,manualSeq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, shutterDesignCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy,profit,margin,manufactureAmount,amountWOTax,costWoAccessories,source,hinge,glass,handleType,handleFinish,knobType,knobFinish,handleImage,knobImage,handleTypeSelection,shutterImage,noOfLengths,handleThickness,handleCode,knobCode,lConnectorPrice,spaceType,productCategoryLocked,colorGroupCode,finishSetId) select proposalId, ?, title, seq, manualSeq,type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, shutterDesignCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy,profit,margin,manufactureAmount,amountWOTax,costWoAccessories,source,hinge,glass,handleType,handleFinish,knobType,knobFinish,handleImage,knobImage,handleTypeSelection,shutterImage,noOfLengths,handleThickness,handleCode,knobCode,lConnectorPrice,spaceType,productCategoryLocked,colorGroupCode,finishSetId from proposal_product where proposalId= ? and fromVersion = ? and active = 'A'",
      "params": ["toVersion","proposalId","fromVersion"]
    },

    {
      "id": "proposal.addon.createnew",
      "type": "insert",
      "table": "proposal_addon",
      "query": "insert into proposal_addon (proposalId,fromVersion, title, seq, code, categoryCode,customAddonCategory, productTypeCode, productSubtypeCode, brandCode, product, catalogueCode, rate, quantity, amount, uom, updatedBy,remarks, spaceType, roomcode) select proposalId, ?, title, seq, code, categoryCode,customAddonCategory, productTypeCode, productSubtypeCode, brandCode, product, catalogueCode, rate, quantity, amount, uom, updatedBy,remarks, spaceType, roomcode from proposal_addon where proposalId= ? and fromVersion = ? ",
      "params": ["toVersion","proposalId","fromVersion"]
    },

    {
      "id": "proposal.product.createnewfromoldproposal",
      "type": "insert",
      "table": "proposal_product",
      "query": "insert into proposal_product (proposalId,fromVersion, title, seq,manualSeq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, shutterDesignCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy, costWoAccessories,source,hinge,glass,handleType,handleFinish,knobType,knobFinish,handleImage,knobImage,shutterImage,handleTypeSelection,noOfLengths,handleThickness,handleCode,knobCode,lConnectorPrice, spaceType,productCategoryLocked,fromProduct,colorGroupCode,finishSetId) select ?,?, title, seq, manualSeq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, shutterDesignCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy,costWoAccessories,source,hinge,glass,handleType,handleFinish,knobType,knobFinish,handleImage,knobImage,shutterImage,handleTypeSelection,noOfLengths,handleThickness,handleCode,knobCode,lConnectorPrice,spaceType,productCategoryLocked,fromProduct,colorGroupCode,finishSetId from proposal_product where proposalId = ? and fromVersion = ? and active = 'A'",
      "params": ["proposalId","version","oldProposalId","toVersion"]
    },

    {
      "id": "proposal.product.createnewbeforeproductionspecification",
      "type": "insert",
      "table": "proposal_product",
      "query": "insert into proposal_product (proposalId,fromVersion, title, seq,manualSeq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, shutterDesignCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy, profit,margin,manufactureAmount,amountWOTax,costWoAccessories,source,hinge,glass,handleType,handleFinish,knobType,knobFinish,handleImage,knobImage,shutterImage,handleTypeSelection,handleThickness,handleCode,knobCode,lConnectorPrice, spaceType,productCategoryLocked,colorGroupCode,finishSetId) select ?,?, title, seq,manualSeq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, shutterDesignCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy,profit,margin,manufactureAmount,amountWOTax,costWoAccessories,source,'Soft Close','Plain','Tunes/CH 713','Chrome Plated (CP)','Tunes/KN 05','Chrome Plated (CP)','https://res.cloudinary.com/mygubbi/image/upload/v1494911663/handle/HANDLE536.jpg','https://res.cloudinary.com/mygubbi/image/upload/v1494911668/handle/KNOB34.jpg','','Normal','160','HANDLE537','KNOB34',lConnectorPrice, spaceType,productCategoryLocked,colorGroupCode,finishSetId from proposal_product where proposalId = ? and fromVersion = ? and active = 'A'",
      "params": ["proposalId","version","oldProposalId","toVersion"]
    },

    {
      "id": "proposal.addon.createnewfromoldproposal",
      "type": "insert",
      "table": "proposal_addon",
      "query": "insert into proposal_addon  (proposalId,fromVersion, title, seq, code, categoryCode,customAddonCategory,productTypeCode, productSubtypeCode, brandCode, product, catalogueCode, rate, quantity,amount, uom, updatedBy,remarks,spaceType, roomcode) select ?, ?, title, seq, code, categoryCode,customAddonCategory, productTypeCode, productSubtypeCode, brandCode, product, catalogueCode, rate, quantity, amount, uom, updatedBy,remarks, spaceType, roomcode from proposal_addon where proposalId = ? and fromVersion = ?",
      "params": ["proposalId","version","oldProposalId","toVersion"]
    },

    {
      "id": "proposal.addon.updateVersionOnConfirm",
      "type": "update",
      "table": "proposal_addon",
      "query": "update proposal_addon set fromVersion = ? where proposalId = ? and fromVersion = ?",
      "params": ["version","proposalId","fromVersion"]
    },

    {
      "id": "proposal.product.update",
      "type": "update",
      "table": "proposal_product",
      "query": "update proposal_product set seq = ?, title = ?, roomCode = ?, productCategoryCode = ?, catalogueId = ?, catalogueName = ?, makeTypeCode = ?, baseCarcassCode = ?, wallCarcassCode = ?, finishTypeCode = ?, finishCode = ?, shutterDesignCode = ?, dimension = ?, quantity = ?, amount = ?, quoteFilePath = ?, modules = ?, addons = ?, updatedBy = ?, costWoAccessories = ?,source = ?,hinge=?,glass=?,handleType= ? ,handleFinish = ?,knobType = ?,knobFinish = ?,handleImage = ?,knobImage = ?,handleTypeSelection=?,shutterImage=?,noOfLengths=?,handleThickness=?,handleCode=?,knobCode=?,lConnectorPrice=?, spaceType = ?,fromProduct = ?,colorGroupCode = ?,finishSetId=? where fromVersion = ? and id = ?",
      "params": ["seq", "title", "roomCode", "productCategoryCode", "catalogueId", "catalogueName", "makeTypeCode", "baseCarcassCode", "wallCarcassCode", "finishTypeCode", "finishCode", "shutterDesignCode", "dimension", "quantity", "amount", "quoteFilePath", "modules", "addons", "updatedBy", "costWoAccessories","source","hinge","glass","handleType","handleFinish","knobType","knobFinish","handleImage","knobImage","handleTypeSelection","shutterImage","noOfLengths","handleThickness","handleCode","knobCode","lConnectorPrice","spaceType","fromProduct","colorGroupCode","finishSetId","fromVersion", "id"]
    },

    {
      "id": "proposal.product.updatesequence",
      "type": "update",
      "table": "proposal_product",
      "query": "update proposal_product set seq=? where id=?",
      "params": ["seq","id"]
    },

    {
      "id": "proposal.product.delete",
      "type": "delete",
      "table": "proposal_product",
      "query": "update proposal_product set active = 'N' where id = ?",
      "params": ["id"]
    },

    {
      "id": "proposal.product.list",
      "type": "select",
      "table": "proposal_product",
      "query": "select id, fromVersion, title, seq,manualSeq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, dimension, quantity, amount, quoteFilePath, createdOn, createdBy, updatedOn, updatedBy, costWoAccessories,source, profit , margin , amountWoTax,manufactureAmount,hinge,glass,handleType,handleFinish,knobType,knobFinish,handleImage,knobImage,handleTypeSelection,shutterImage,noOfLengths,handleThickness,handleCode,knobCode,lConnectorPrice from proposal_product where proposalId = ? and active = 'A'",
      "params": ["proposalId"]
    },
    {
      "id": "proposal.product.versionlist",
      "type": "select",
      "table": "proposal_product",
      "query": "select * from proposal_product where proposalId = ? and fromVersion = ? and active = 'A'",
      "params": ["proposalId","fromVersion"],
      "jsonfields":["modules", "addons"]
    },

    {
      "id": "proposal.versions.list",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where proposalId = ? ",
      "params": ["proposalId"]
    },

    {
      "id": "proposal.product.all.detail",
      "type": "select",
      "table": "proposal_product",
      "query": "select * from proposal_product where proposalId = ? and fromVersion = ? and active = 'A' order by seq",
      "params": ["proposalId","fromVersion"],
      "jsonfields":["modules", "addons"]
    },
    {
      "id": "proposal.all.select",
      "type": "select",
      "table": "proposal",
      "query": "select id,title from proposal where status != 'deleted'",
      "params": [],
      "jsonfields":[]
    },
    {
      "id": "proposal_version.updatedProposals.select",
      "type": "select",
      "table": "version_master",
      "query": "select *  from version_master vm where vm.updatedOn > (select lastRun from dw.reports_schedular where status = 'success' order by lastRun limit 1) order by proposalId asc,version asc",
      "params": [],
      "jsonfields":[]
    },

    {
      "id": "proposal.product.sow.till1",
      "type": "select",
      "table": "proposal_product",
      "query": "select distinct spaceType,roomCode as roomcode from proposal_product where proposalId = ? and fromVersion like '0.%' and active = 'A' order by seq;",
      "params": ["proposalId"],
      "jsonfields":[]
    },
    {
      "id": "proposal.addon.sow.till1",
      "type": "select",
      "table": "proposal_addon",
      "query": "select distinct spaceType,roomCode as roomcode from proposal_addon where proposalId = ? and fromVersion like '0.%'",
      "params": ["proposalId"],
      "jsonfields":[]
    },

    {
      "id": "proposal.product.sow.till2",
      "type": "select",
      "table": "proposal_product",
      "query": "select distinct spaceType,roomCode as roomcode from proposal_product where proposalId = ? and fromVersion like '1.%' and active = 'A' order by seq;",
      "params": ["proposalId"],
      "jsonfields":[]
    },
    {
      "id": "proposal.addon.sow.till2",
      "type": "select",
      "table": "proposal_addon",
      "query": "select distinct spaceType,roomCode as roomcode from proposal_addon where proposalId = ? and fromVersion like '1.%'",
      "params": ["proposalId"],
      "jsonfields":[]
    },

    {
      "id": "proposal.product.select.sow.all",
      "type": "select",
      "table": "proposal_product",
      "query": "select distinct spaceType,roomCode as roomcode from proposal_product where proposalId = ? and fromVersion = ? and active = 'A' order by seq",
      "params": ["proposalId","fromVersion"],
      "jsonfields":["modules"]
    },
    {
      "id": "proposal.addon.select.sow.all",
      "type": "select",
      "table": "proposal_addon",
      "query": "select distinct spaceType,roomCode from proposal_addon where proposalId = ? and fromVersion = ?",
      "params": ["proposalId","fromVersion"],
      "jsonfields":[]
    },

    {
      "id": "proposal.product.selected.detail",
      "type": "select",
      "table": "proposal_product",
      "query": "select * from proposal_product where proposalId = ? and active = 'A' and id in (?) order by seq",
      "params": ["proposalId", "productIds"],
      "jsonfields":["modules", "addons"]
    },

    {
      "id": "proposal.product.detail",
      "type": "select",
      "table": "proposal_product",
      "query": "select * from proposal_product where id = ? and fromVersion = ?",
      "params": ["id","fromVersion"],
      "jsonfields":["modules", "addons"]
    },

    {
      "id": "proposal.product.specificversion",
      "type": "select",
      "table": "proposal_product",
      "query": "select distinct spaceType,roomcode from proposal_product where proposalId = ?  and fromVersion = ? and active = 'A'",
      "params": ["proposalId","versiontobeconsidered"],
      "jsonfields":[]
    },
    {
      "id": "proposal.addon.specificversion",
      "type": "select",
      "table": "proposal_addon",
      "query": "select distinct spaceType,roomcode from proposal_addon where proposalId = ?  and fromVersion = ?",
      "params": ["proposalId","versiontobeconsidered"],
      "jsonfields":[]
    },
    {
      "id": "proposal.product.select.between.bcanddso",
      "type": "select",
      "table": "proposal_product",
      "query": "select distinct proposalId,spaceType,roomcode,title,type,amount,makeTypeCode,baseCarcassCode,wallCarcassCode,finishCode,finishtypeCode,productCategoryCode,modules from proposal_product where proposalId = 2686  and fromVersion like '1.%' and fromVersion != '1.0'",
      "params": ["proposalId","fromVersion"],
      "jsonfields":["modules"]
    },
    {
      "id": "proposal.product.versionlist",
      "type": "select",
      "table": "proposal_product",
      "query": "select * from proposal_product where proposalId = ? and fromVersion = ? and active = 'A' order by seq",
      "params": ["proposalId","fromVersion"],
      "jsonfields":["modules", "addons"]
    },
    {
      "id": "proposal.product.selectversion",
      "type": "select",
      "table": "proposal_product",
      "query": "select * from proposal_product where proposalId = ? and fromVersion = ? and active = 'A' order by seq",
      "params": ["id","version"],
      "jsonfields":["modules", "addons"]
    },



    // Module costing queries
    {
      "id": "module.components.select",
      "type": "select",
      "table": "module_components",
      "query": "select * from module_components where modulecode = ?",
      "params": ["modulecode"]
    },
    {
      "id": "module.components.select.all",
      "type": "select",
      "table": "module_components",
      "query": "select * from module_components ",
      "params": []
    },
    {
      "id": "module.carcass.cost",
      "type": "select",
      "table": "module_components",
      "query": "select sum(cm.area * mr.rate * mc.quantity) as cost from module_components mc, carcass_master cm, mf_rate_master mr where mc.modulecode = ? and mc.comptype = 'C' and mc.compcode = cm.code and mr.type = 'C' and mr.mfcode = ? and mr.thickness = cm.thickness",
      "params": ["modulecode", "material"]
    },
    {
      "id": "module.shutter.cost",
      "type": "select",
      "table": "module_components",
      "query": "select sum(sfx.cuttingarea * mr.rate * mc.quantity) as cost from module_components mc, shutter_finish_xref sfx, mf_rate_master mr where mc.modulecode = ? and mc.comptype = 'S' and mc.compcode = sfx.shuttercode and mr.type = 'S' and mr.mfcode = ? and mr.thickness = sfx.cuttingt",
      "params": ["modulecode", "finishtype"]
    },
    {
      "id": "module.acshw.cost",
      "type": "select",
      "table": "module_components",
      "query": "select sum(ahm.price * mc.quantity) as cost from module_components mc, acs_hw_master ahm where mc.modulecode = ? and mc.comptype in ('A', 'H') and mc.compcode = ahm.code",
      "params": ["modulecode"]
    },
    {
      "id": "carcass.select.all",
      "type": "select",
      "table": "carcass_master",
      "query": "select * from carcass_master",
      "params": []
    },
    {
      "id": "shutter.select.all",
      "type": "select",
      "table": "shutter_master",
      "query": "select code, title, plength, breadth, thickness, edgebinding, quantity from shutter_master",
      "params": []
    },
    {
      "id": "panel.select.all",
      "type": "select",
      "table": "panel_master",
      "query": "select * from panel_master",
      "params": []
    },

    {
      "id": "ratecard.distinct.select.all",
      "type": "select",
      "table": "ratecard_master",
      "query": "select distinct rateCardId, code,type,productCategory,setId from ratecard_master",
      "params": []
    },

    {
      "id": "pricemaster.select.all",
      "type": "select",
      "table": "price_master",
      "query": "select rateType,rateId,city,price,sourcePrice,fromDate,toDate from price_master",
      "params": []
    },

    {
      "id": "accessory.select.all",
      "type": "select",
      "table": "acc_hw_master",
      "query": "select code, title, catalogCode, make, imagePath, msp as price, uom, category,ERPCode from acc_hw_master where type = 'A'",
      "params": []
    },
    {
      "id": "hardware.select.all",
      "type": "select",
      "table": "acc_hw_master",
      "query": "select code, title, catalogCode, make, imagePath, msp as price, uom,category,ERPCode from acc_hw_master where type = 'H'",
      "params": []
    },

    {
      "id": "module.accessories.select",
      "type": "select",
      "table": "acc_hw_master",
      "query": "select ahm.title, ahm.make, ahm.imagePath from module_components mc, acc_hw_master ahm where mc.modulecode = ? and ahm.makeType = ? and mc.comptype = 'A' and mc.compcode = ahm.code",
      "params": ["mgCode", "makeType"]
    },

    {
      "id": "lookup.codes",
      "type": "select",
      "table": "code_master",
      "query": "select title,code,additionalType,seq from code_master where lookupType =? group by title order by min(seq) Asc,title",
      "params": ["lookupType"]
    },
    {
      "id": "finish.lookup",
      "type": "select",
      "table": "finish_master",
      "query": "select finishMaterial as additionalType, finishCode as code, title from finish_master",
      "params": []
    },
    {
      "id": "finish.master.all",
      "type": "select",
      "table": "finish_master",
      "query": "select costCode, finishCode, finishType, finishMaterial, design, shutterMaterial, colorGroupCode, cuttingOffset, title, edgeBinding, doubleExposedCostCode,fromDate,toDate,setCode from finish_master",
      "params": []
    },

    {
      "id": "handle.master.all",
      "type": "select",
      "table": "handle_master",
      "query": "select code,type,title,finish,mgCode,thickness,sourcePrice,msp,imagePath,erpCode,articleNo from handle_master",
      "params": []
    },
    {
      "id": "modulehinge.master.all",
      "type": "select",
      "table": "module_hinge_map",
      "query": "select modulecode,hingecode,type,qty,qtyFlag,qtyFormula from module_hinge_map",
      "params": []
    },
    {
      "id": "addons.categories",
      "type": "select",
      "table": "addon_master",
      "query": "select distinct categoryCode, rateReadOnly from addon_master",
      "params": []
    },

    {
      "id": "addons.sapcetypes",
      "type": "select",
      "table": "code_master",
      "query": "select distinct code from code_master where lookupType = ?",
      "params": ["spaceType"]
    },

    {
      "id": "addons.product.types",
      "type": "select",
      "table": "addon_master",
      "query": "select distinct productTypeCode from addon_master where categoryCode = ?",
      "params": ["categoryCode"]
    },

    {
      "id": "addons.product.subtypes",
      "type": "select",
      "table": "addon_master",
      "query": "select distinct productSubtypeCode from addon_master where categoryCode = ? and productTypeCode = ?",
      "params": ["categoryCode", "productTypeCode"]
    },
    {
      "id": "addons.brands",
      "type": "select",
      "table": "addon_master",
      "query": "select distinct brandCode from addon_master where categoryCode = ? and productSubtypeCode = ? and productTypeCode = ?",
      "params": ["categoryCode", "productSubtypeCode", "productTypeCode"]
    },

    {
      "id": "addons.products",
      "type": "select",
      "table": "addon_master",
      "query": "select categoryCode,catalogueCode,title,product,code,rate,imagePath,uom from addon_master where categoryCode = ? and productTypeCode = ? and productSubtypeCode = ? and brandCode = ?",
      "params": ["categoryCode","productTypeCode","productSubtypeCode", "brandCode"]
    },

    {
      "id": "finish.codes",
      "type": "select",
      "table": "finish_master",
      "query": "select finishMaterial, finishCode,colorGroupCode,title,setCode from finish_master where fromDate <= ? and toDate >=? order by sequence",
      "params": ["fromDate","toDate"]
    },

    {
      "id": "color.codes",
      "type": "select",
      "table": "color_master",
      "query": "select code as code, code as name, imagePath from color_master where (colorGroupCode = ? or 'ALL' = ?) and  fromDate <= ? and toDate >=? order by code",
      "params": ["colorGroupCode", "colorGroupCode","fromDate","toDate"]
    },

    {
      "id": "colors.select.all",
      "type": "select",
      "table": "color_master",
      "query": "select code as code, code as name, imagePath from color_master order by colorGroupCode, code",
      "params": []
    },

    {
      "id": "product.select.productid",
      "type": "select",
      "query": "select id, productId, productJson from product where productId = ?",
      "params": [
        "productId"
      ]
    },
    {
      "id": "product.select.subcategory",
      "type": "select",
      "query": "select productJson from product where subcategoryId = ? ORDER BY productId",
      "params": ["subcategory"]
    },

    {
      "id": "acc_pack_master.select",
      "type": "select",
      "query": "select code, title from acc_pack_master",
      "params": []
    },

    {
      "id": "acc_pack_components.select",
      "type": "select",
      "query": "select apcode, type, code, qty from acc_pack_components",
      "params": []
    },

    {
      "id": "module_acc_pack.select",
      "type": "select",
      "query": "select apcode, mgcode from module_acc_pack",
      "params": []
    },

    {
      "id": "acc_addon_map.select",
      "type": "select",
      "query": "select apcode, addoncode from accpack_addon_map",
      "params": []
    },

    {
      "id": "accpacks.selectymodule",
      "type": "select",
      "query": "select code, title from acc_pack_master where code in (select apcode from module_acc_pack where mgcode = ?)",
      "params": ["mgCode"]
    },

    {
      "id": "addons.selectbyaccpack",
      "type": "select",
      "query": "select code, title, imagePath from acc_hw_master where type = 'A' and code in (select addoncode from accpack_addon_map where apcode = ?)",
      "params": ["apCode"]
    },

    {
      "id": "module.selectModulesByCategory",
      "type": "select",
      "query": "select distinct code, description, width, depth, height, productCategory, moduleCategory, moduleType, imagePath, accessoryPackDefault, remarks, unitType, handleMandatory, knobMandatory, hingeMandatory, sqftCalculation from module_master where (productCategory='all' or productCategory = ?) and moduleCategory = ?",
      "params": ["productCategory","moduleCategory"]
    },


    //city related queries
    {
      "id": "city.selectMonthCount",
      "type": "select",
      "query": "select quoteNo from city_master where curmonth= ? and city = ? ",
      "params": ["curmonth","city"]
    },

    {
      "id": "city.newCityQuote",
      "type": "insert",
      "query": "insert into city_master(city,curmonth,proposalId,quoteNo,cityLocked) values (?, ?, ?, ?, 'Yes')",
      "params": ["city","curmonth","proposalId","quoteNo"]
    },
    {
      "id": "city.selectCity",
      "type": "select",
      "query": "select * from city_master where proposalId= ?",
      "params": ["proposalId"]
    },
    {
      "id": "city.checkCity",
      "type": "select",
      "query": "select cityLocked from city_master where proposalId= ?",
      "params": ["proposalId"]
    },
    {
      "id": "addons.addonPriceDetails",
      "type": "select",
      "table": "addon_master",
      "query": "select * from addon_master where code= ?",
      "params": ["code"]
    },

    //Workbench Related queries
    {
      "id": "workbench.code.codelookup",
      "type": "select",
      "table": "code_master",
      "query": "select * from code_master where lookupType = ?",
      "params": ["lookupType"]
    },
    {
      "id": "workbench.code.additionalcodelookup",
      "type": "select",
      "table": "code_master",
      "query": "select * from code_master where lookupType = ? and additionalType = ?",
      "params": ["lookupType", "additionalType"]
    },
    {
      "id": "workbench.designmaster.create",
      "type": "insert",
      "table": "design_master",
      "query": "insert into design_master (spaceName,webDisplayName,dFileLocation,primaryImageLocation,secondaryImageLocationJson,l0Location,moodBoardLocation,conceptNote, spaceType, spaceLayout, spaceSize, propertyType, spaceDesignStyle, spaceColorStyle, spaceFeature, furnitureJson, decorJson, wallTreatmentType, wallMaterial, wallFinishMaterial, wallFinishSwatch, ceilingType, ceilingMaterial, ceilingFinishMaterial, ceilingFinishSwatch, flooringMaterial,flooringFinish, flooringFinishSwatch,lighting, designElement, user1, hobby1, profession1, user2, hobby2, profession2, ageGroup, religion, community, designerDetailsJson, taggedProductJson, designerstory ) values (?,?,?,?,?,?,?,?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ",
      "params":["spaceName","webDisplayName","dFileLocation","primaryImageLocation","secondaryImageLocationJson","l0Location","moodBoardLocation","conceptNote","spaceType","spaceLayout","spaceSize","propertyType","spaceDesignStyle","spaceColorStyle","spaceFeature", "furnitureJson","decorJson","wallTreatmentType","wallMaterial","wallFinishMaterial","wallFinishSwatch","ceilingType","ceilingMaterial","ceilingFinishMaterial","ceilingFinishSwatch","flooringMaterial","flooringFinish","flooringFinishSwatch","lighting","designElement","user1", "hobby1", "profession1", "user2", "hobby2", "profession2","ageGroup", "religion", "community", "designerDetailsJson","taggedProductJson","designerstory"],
      "jsonfields":["secondaryImageLocationJson", "conceptNote","spaceLayout","spaceFeature", "furnitureJson","decorJson","wallTreatmentType","wallMaterial", "wallFinishMaterial","ceilingType", "ceilingMaterial","flooringMaterial","flooringFinish","designerDetailsJson","taggedProductJson"]
    },
    {
      "id": "workbench.designmaster.update",
      "type": "update",
      "table": "design_master",
      "query": "update design_master set spaceName = ?, webDisplayName = ?, dFileLocation = ?, primaryImageLocation = ? , secondaryImageLocationJson = ? , l0Location = ?, moodBoardLocation = ? ,conceptNote = ? ,spaceType = ? ,spaceLayout = ? ,spaceSize = ? ,propertyType = ? ,spaceDesignStyle = ? ,spaceColorStyle = ? ,spaceFeature = ? ,furnitureJson = ? ,decorJson = ? , wallTreatmentType = ? , wallMaterial = ? , wallFinishMaterial = ?, wallFinishSwatch = ? , ceilingType = ?, ceilingMaterial = ?, ceilingFinishMaterial = ?, ceilingFinishSwatch = ?, flooringMaterial = ?,flooringFinish = ?, flooringFinishSwatch = ?, lighting = ?, designElement = ?, user1 = ?, hobby1 = ?, profession1 = ?, user2 = ?, hobby2 = ?, profession2 = ?, ageGroup = ?, religion = ?, community = ?, designerstory = ?  where id = ? ",
      "params":["spaceName","webDisplayName","dFileLocation","primaryImageLocation","secondaryImageLocationJson","l0Location","moodBoardLocation","conceptNote","spaceType","spaceLayout","spaceSize","propertyType","spaceDesignStyle","spaceColorStyle","spaceFeature", "furnitureJson","decorJson", "wallTreatmentType", "wallMaterial", "wallFinishMaterial", "wallFinishSwatch", "ceilingType", "ceilingMaterial", "ceilingFinishMaterial", "ceilingFinishSwatch", "flooringMaterial", "flooringFinish", "flooringFinishSwatch", "lighting", "designElement", "user1", "hobby1", "profession1", "user2", "hobby2", "profession2", "ageGroup", "religion", "community", "designerstory","id"],
      "jsonfields":["secondaryImageLocationJson", "conceptNote","spaceLayout","spaceFeature", "furnitureJson","decorJson", "wallTreatmentType", "wallMaterial", "wallFinishMaterial", "wallFinishSwatch", "ceilingType", "ceilingMaterial", "ceilingFinishMaterial", "ceilingFinishSwatch", "flooringMaterial", "flooringFinish", "flooringFinishSwatch"]
    },
    {
      "id": "workbench.designmaster.select",
      "type": "select",
      "table": "design_master",
      "query": "select * from design_master",
      "params": [],
      "jsonfields":["secondaryImageLocationJson","designerDetailsJson","taggedProductJson"]
    },
    {
      "id": "workbench.designmaster.id",
      "type": "select",
      "table": "design_master",
      "query": "select * from design_master where id = ? ",
      "params": ["id"]
    },
    {
      "id": "workbench.productmaster.create",
      "type": "insert",
      "table": "product_master",
      "query": "insert into product_master (productName, webDisplayName, dFileLocation, primaryImageLocation, secondaryImageLocationJson, category, subcategory, usp, designAttribute, spaceJSon, productStyle, otherDesignStyle, productColor, productCompatibilityColor, furnitureComponentMaterialJson, designerDetailsJson, sourcingScale, designerstory) values (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ",
      "params": ["productName","webDisplayName","dFileLocation","primaryImageLocation","secondaryImageLocationJson","category","subcategory","usp","designAttribute","spaceJSon","productStyle","otherDesignStyle","productColor","productCompatibilityColor","furnitureComponentMaterialJson","designerDetailsJson","sourcingScale","designerstory"],
      "jsonfields":["secondaryImageLocationJson", "spaceJSon","furnitureComponentMaterialJson","designerDetailsJson"]
    },
    {
      "id": "workbench.productmaster.update",
      "type": "update",
      "table": "product_master",
      "query": "update product_master set productName = ?, webDisplayName = ?, dFileLocation = ?, primaryImageLocation = ? , secondaryImageLocationJson = ?, category = ? , subcategory = ? , usp = ? , designAttribute = ? , spaceJSon = ? , productStyle = ? , otherDesignStyle = ? , productColor = ? , productCompatibilityColor = ? , furnitureComponentMaterialJson = ? , designerDetailsJson = ? , sourcingScale = ? , designerstory = ? where id = ? ",
      "params": ["productName","webDisplayName","dFileLocation","primaryImageLocation","secondaryImageLocationJson","category","subcategory","usp","designAttribute","spaceJSon","productStyle","otherDesignStyle","productColor","productCompatibilityColor","furnitureComponentMaterialJson","designerDetailsJson","sourcingScale","designerstory","id"],
      "jsonfields":["secondaryImageLocationJson", "spaceJSon","otherDesignStyle","productCompatibilityColor","furnitureComponentMaterialJson","designerDetailsJson"]
    },

    {
      "id": "workbench.productmaster.select",
      "type": "select",
      "table": "product_master",
      "query": "select * from product_master",
      "params": [],
      "jsonfields":["secondaryImageLocationJson", "spaceJSon","furnitureComponentMaterialJson","designerDetailsJson"]
    },
    {
      "id": "workbench.productmaster.id",
      "type": "select",
      "table": "product_master",
      "query": "select * from product_master where id = ? ",
      "params": ["id"]
    },
    {
      "id": "workbench.materialfinishmapping.select",
      "type": "select",
      "table": "material_finish_mapping",
      "query": "select distinct mf.materialName , mf.finishName, mc.componentName from material_finish_mapping mf INNER JOIN material_component_mapping mc on mf.materialName= ? and mc.element = ? ",
      "params": ["materialName","element"]
    },
    {
      "id": "workbench.finishmapping.select",
      "type": "select",
      "table": "finish_mapping",
      "query": "select * from finish_mapping where finishMaterial = ?",
      "params": ["finishMaterial"]
    },
    {
      "id": "workbench.designmaster.delete",
      "type": "delete",
      "table": "design_master",
      "query": "delete from design_master where id = ?",
      "params": ["id"]
    },
    {
      "id": "workbench.materialcomponentmapping.select",
      "type": "select",
      "table": "material_component_mapping",
      "query": "select distinct mm.materialName from material_component_mapping mm INNER JOIN code_master cm ON mm.componentName = ? and cm.lookupType = 'component'",
      "params": ["componentName"]
    },
    {
      "id": "workbench.tagproductmaster.create",
      "type": "insert",
      "table": "tagproduct_master",
      "query": "insert into tagproduct_master (productName, imagePath, spaceName) values (?,?,?) ",
      "params": ["productName","imagePath","spaceName"]
    },
    {
      "id": "workbench.tagproductmaster.select",
      "type": "select",
      "table": "tagproduct_master",
      "query": "select p.id,t.productName,t.imagePath,t.spaceName from tagproduct_master t INNER JOIN product_master p on p.productName=t.productName INNER JOIN design_master d  ON d.spaceName=t.spaceName where d.id= ? ",
      "params": ["id"]
    },
    {
      "id": "workbench.designmaster.fetch",
      "type": "select",
      "table": "design_master",
      "query": "select d.spaceName , d.primaryImageLocation , d.designerstory , t.productName , t.imagePath from design_master d INNER JOIN tagproduct_master t ON d.spaceName=t.spaceName where d.id=?; ",
      "params": ["id"]
    },
    {
      "id": "workbench.materialcomponent.select",
      "type": "select",
      "table": "code_master",
      "query": "select cm.title,mm.code,mm.materialName from code_master cm INNER JOIN material_component_mapping mm on cm.title=mm.componentName where cm.lookupType=? and cm.additionalType=? ",
      "params": ["lookupType","additionalType"]
    },
    {
      "id": "workbench.productmaster.id",
      "type": "select",
      "table": "product_master",
      "query": "select * from product_master where id = ? ",
      "params": ["id"]
    },
    {
      "id": "workbench.designmaster.id",
      "type": "select",
      "table": "design_master",
      "query": "select * from design_master where id = ? ",
      "params": ["id"]
    },
    {
      "id": "workbench.designmaster.fetch",
      "type": "select",
      "table": "design_master",
      "query": "select d.spaceName , d.primaryImageLocation , d.designerstory , t.productName , t.imagePath from design_master d INNER JOIN tagproduct_master t ON d.spaceName=t.spaceName where d.id=?; ",
      "params": ["id"]
    },
    /*{
      "id": "workbench.materialfinishmapping.select",
      "type": "select",
      "table": "material_finish_mapping",
      "query": "select * from material_finish_mapping where materialName = ? ",
      "params": ["materialName"]
    }*/

    //GaAME accessory related queries

    {
      "id": "workbench.materialcomponentmapping.select",
      "type": "select",
      "table": "material_component_mapping",
      "query": "select distinct mm.materialName from material_component_mapping mm INNER JOIN code_master cm ON mm.componentName = ? and cm.lookupType = 'component'",
      "params": ["componentName"]
    },

    {
      "id": "accessory.details",
      "type": "select",
      "table": "acc_pack_components",
      "query": "select apcode,type,code from acc_pack_components where apcode=? and type='A'",
      "params": ["apcode"]
    },
    {
      "id": "accessory.hwdetails",
      "type": "select",
      "table": "acc_pack_components",
      "query": "select apcode,type,code,qty from acc_pack_components where apcode=? and type='H'",
      "params": ["apcode"]
    },
    {
      "id": "accessory.ratedetails",
      "type": "select",
      "table": "acc_hw_master",
      "query": "select id,type,code,title,make,category,imagePath,uom,cp,mrp,msp from acc_hw_master where code=?",
      "params": ["code"]
    },

    {
      "id": "ratefactor.details",
      "type": "select",
      "table": "ratecard_master",
      "query": "select rateCardID,code,type,thickness from ratecard_master where rateCardId=?",
      "params": ["rateCardId"]
    },
    {
      "id": "ratefactor.details",
      "type": "select",
      "table": "ratecard_master",
      "query": "select rateCardID,code,type,thickness from ratecard_master where rateCardId=?",
      "params": ["rateCardId"]
    },
    {
      "id": "module.hwdetails",
      "type": "select",
      "table": "module_components",
      "query": "select modulecode,comptype,compcode,quantity,quantityFlag,quantityFormula from module_components where modulecode=? and comptype='H' ",
      "params": ["modulecode"]
    },
    {
      "id": "transaction.insert",
      "type": "insert",
      "table": "transaction",
      "query": "insert into transaction (bankcode, txnid, net_amount_debit, amount, phone, productinfo, status, firstname, addedon, bank_ref_num, email, mihpayid, udf1, card_type, name_on_card, cardnum, fulldetails) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
      "params": [
        "bankcode",
        "txnid",
        "net_amount_debit",
        "amount",
        "phone",
        "productinfo",
        "status",
        "firstname",
        "addedon",
        "bank_ref_num",
        "email",
        "mihpayid",
        "udf1",
        "card_type",
        "name_on_card",
        "cardnum",
        "fulldetails"
      ]
    },

    /*{
      "id": "module.hwdetails",
      "type": "select",
      "table": "module_components",
      "query": "select modulecode,comptype,compcode,quantity from module_components where modulecode=? and comptype='H' ",
      "params": ["modulecode"]
    },*/

    {
      "id": "proposal.selectallproducts",
      "type": "select",
      "table": "proposal_product",
      "query": "select * from proposal_product",
      "params": []
    },


    //Product Library
    {
      "id": "proposal.product.insertproductlibray",
      "type": "insert",
      "table": "product_library",
      "query": "insert into product_library ( title, seq,manualSeq, type,spaceType, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, shutterDesignCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy, costWoAccessories,source,subCategory,productDescription,collection,variantDescription,imageurl,productTitle,hinge,glass,handleType,handleFinish,handleImage,knobType,knobFinish,knobImage,size, productLocation,handleTypeSelection,shutterDesign,shutterImageUrl,handleThickness,handleCode,knobCode,lConnectorPrice,noOfLengths,designer,colorGroupCode) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ?,?,?,?,?,?,?,?,?, ?,?)",
      "params": ["title", "seq","manualSeq","type", "spaceType","roomCode", "productCategoryCode", "catalogueId", "catalogueName", "makeTypeCode",
        "baseCarcassCode", "wallCarcassCode", "finishTypeCode", "finishCode", "shutterDesignCode", "dimension", "quantity", "amount", "quoteFilePath",
        "modules", "addons", "createdBy", "costWoAccessories","source","subCategory","productDescription","collection","variantDescription","imageurl","productTitle","hinge","glass","handleType","handleFinish","handleImage","knobType","knobFinish","knobImage","size", "productLocation","handleTypeSelection","shutterDesign","shutterImageUrl","handleThickness","handleCode","knobCode","lConnectorPrice","noOfLengths", "designer","colorGroupCode"]
    },
    {
      "id": "proposal.product.updateproductlibray",
      "type": "update",
      "table": "product_library",
      "query": "update product_library set title=?, seq=?,manualSeq=?, type=?, spaceType= ? , roomCode=?, productCategoryCode=?, catalogueId=?, catalogueName=?, makeTypeCode=?, baseCarcassCode=?, wallCarcassCode=?, finishTypeCode=?, finishCode=?, shutterDesignCode=?, dimension=?, quantity=?, amount=?, quoteFilePath=?, modules=?, addons=?, createdBy=?, costWoAccessories=?,source=?,subCategory=?,productDescription=?,collection=?,variantDescription=?,imageurl=?,productTitle=?,hinge=?,glass=?,handleType=?,handleFinish=?,handleImage=?,knobType=?,knobFinish=?,knobImage=?, size=?,productLocation=?,handleTypeSelection=?,shutterDesign=?,shutterImageUrl=?,handleThickness=?,handleCode=?,knobCode=?,lConnectorPrice=?,noOfLengths=?,designer=?,colorGroupCode=?",
      "params": ["title", "seq","manualSeq","type", "spaceType", "roomCode", "productCategoryCode", "catalogueId", "catalogueName", "makeTypeCode",
        "baseCarcassCode", "wallCarcassCode", "finishTypeCode", "finishCode", "shutterDesignCode", "dimension", "quantity", "amount", "quoteFilePath",
        "modules", "addons", "createdBy", "costWoAccessories","source","subCategory","productDescription","collection","variantDescription","imageurl","productTitle","proposalId","hinge","glass","handleType","handleFinish","handleImage","knobType","knobFinish","knobImage","size", "productLocation","handleTypeSelection","shutterDesign","shutterImageUrl","handleThickness","handleCode","knobCode","lConnectorPrice","noOfLengths","designer","colorGroupCode"]
    },
    {
      "id": "proposal.searchproductlibray",
      "type": "select",
      "table": "product_library",
      "query": "select * from product_library where productTitle = ? and collection = ?",
      "params": ["productTitle","collection"],
      "jsonfields":["modules", "addons"]
    },
    {
      "id": "proposal.selectproductlibray",
      "type": "select",
      "table": "product_library",
      "query": "select * from product_library where Active='A'",
      "params": [],
      "jsonfields":["modules", "addons"]
    },
    {
      "id": "proposal.product.addtoproposalproduct",
      "type": "insert",
      "table": "proposal_product",
      "query": "insert into proposal_product (proposalId,fromVersion, title, seq,manualSeq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, shutterDesignCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy, costWoAccessories,source,hinge,glass,handleType,handleFinish,knobType,knobFinish,handleTypeSelection,shutterImage,noOfLengths,handleThickness,handleCode,knobCode,lConnectorPrice,noOfLengths,productCategoryLocked,colorGroupCode) select ?,?, title,?,manualSeq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, shutterDesignCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy, costWoAccessories,source,hinge,glass,handleType,handleFinish,knobType,knobFinish,handleTypeSelection,shutterImage,noOfLengths,handleThickness,handleCode,knobCode,lConnectorPrice,noOfLengths,designer,colorGroupCode from product_library where id=?",
      "params": ["proposalId","fromVersion","seq","id"]
    },
    {
      "id": "proposal.selectproductlibrarybasedonid",
      "type": "select",
      "table": "product_library",
      "query": "select * from product_library where id=?",
      "params": ["id"],
      "jsonfields":["modules", "addons"]
    },
    {
      "id": "proposal.selectcategorybasedonproduct",
      "type": "select",
      "table": "product_library_master",
      "query": "select * from product_library_master where category=?",
      "params": ["category"],
      "jsonfields":[]
    },
    {
      "id": "proposal.selectuserprofiledata",
      "type": "select",
      "table": "user_profile",
      "query": "select profile from user_profile where crmId != '' and profile like '[%' ",
      "params": [],
      "jsonfields":["profile"]
    },
    {
      "id": "proposal.selectuserprofiledatabasedoncrmid",
      "type": "select",
      "table": "user_profile",
      "query": "select profile from user_profile where crmId=?",
      "params": ["crmId"],
      "jsonfields":["profile"]
    },
    {
      "id": "module.selecthandletitle",
      "type": "select",
      "table": "handle_master",
      "query": "SELECT DISTINCT title FROM handle_master where type=? GROUP BY title ORDER BY min(seq) Asc, title",
      "params": ["type"],
      "jsonfields":[]
    },
    {
      "id": "module.selecthandlefinish",
      "type": "select",
      "table": "handle_master",
      "query": "select distinct(finish) from handle_master where title=? and type=?",
      "params": ["title","type"],
      "jsonfields":[]
    },
    {
      "id": "module.selecthandleThickness",
      "type": "select",
      "table": "handle_master",
      "query": "select distinct(thickness) from handle_master where title=? and finish=? and type=? order by seq",
      "params": ["title","finish","type"],
      "jsonfields":[]
    },
    {
      "id": "module.checkhandlepresent",
      "type": "select",
      "table": "module_master",
      "query": "select * from module_master where code=?",
      "params": ["code"],
      "jsonfields":[]
    },
    {
      "id": "module.selectfromcodemaster",
      "type": "select",
      "table": "code_master",
      "query": "select * from code_master where lookupType=?",
      "params": ["lookupType"],
      "jsonfields":[]
    },
    {
      "id": "proposal.selectcategory",
      "type": "select",
      "table": "product_library_master",
      "query": "select * from product_library_master",
      "params": [],
      "jsonfields":[]
    },
    {
      "id": "proposal.selectproductname",
      "type": "select",
      "table": "product_library",
      "query": "select * from product_library where productCategoryCode=? and subCategory=?",
      "params": ["productCategoryCode","subCategory"],
      "jsonfields":["modules", "addons"]
    },
    {
      "id": "proposal.selectproductfromlibrary",
      "type": "select",
      "table": "product_library",
      "query": "select * from product_library where productCategoryCode=? and subCategory=? and productTitle = ?",
      "params": ["productCategoryCode","subCategory","productTitle"],
      "jsonfields":["modules", "addons"]
    },
    {
      "id": "module.sqftcalculation",
      "type": "select",
      "table": "module_master",
      "query": "select * from module_master where code=?",
      "params": ["code"],
      "jsonfields":[]
    },
    {
      "id": "module.selecthandlecode",
      "type": "select",
      "table": "handle_master",
      "query": "select * from handle_master where title=? and finish=? and type=? and thickness=?",
      "params": ["title","finish","type","thickness"],
      "jsonfields":[]
    },
    {
      "id": "module.handledata",
      "type": "select",
      "table": "handle_master",
      "query": "select * from handle_master where code=?",
      "params": ["code"],
      "jsonfields":[]
    },
    {
      "id": "accessory.handledetails",
      "type": "select",
      "table": "acc_pack_components",
      "query": "select * from acc_pack_components where apcode=? and type=?",
      "params": ["apcode","type"]
    },
    {
      "id": "module.selecthandleimage",
      "type": "select",
      "table": "handle_master",
      "query": "select * from handle_master where title=? and finish=? and type=?",
      "params": ["title","finish","type"]
    },
    {
      "id": "module.shuttercode",
      "type": "select",
      "table": "finish_master",
      "query": "select shutterCode,imagePath from shutter_master where shutterCode in (select shutterCode from shutter_finish_mapping where finishcode in(select finishcode from finish_master where finishCode = ?))",
      "params": ["finishCode"],
      "jsonfields":[]
    },
    {
      "id": "module.hingdata",
      "type": "select",
      "table": "module_hinge_map",
      "query": "select modulecode,hingecode,qty,type,qtyFlag,qtyFormula from module_hinge_map where modulecode=? and type=?",
      "params": ["modulecode","type"],
      "jsonfields":[]
    },
    {
      "id": "module.shutterimage",
      "type": "select",
      "table": "shutter_master",
      "query": "select * from shutter_master where shutterCode=?",
      "params": ["shutterCode"],
      "jsonfields":[]
    },
    {
      "id": "blog.select.blogid",
      "type": "select",
      "query": "select id, blogId, tags, blogJson from blog where blogId = ?",
      "params": [
        "blogId"
      ]
    },
    {
      "id": "blog.insert",
      "type": "insert",
      "table": "blog",
      "query": "insert into blog(blogId, tags, blog_categories, blogJson, status ) values (?, ?, ?, ?, ?)",
      "params": [
        "blogId",
        "tags",
        "blog_categories",
        "blogJson",
        "status"
      ]
    },
    {
      "id": "blog.update",
      "type": "update",
      "table": "blog",
      "query": "update blog set tags = ?, blog_categories = ?, blogJson = ?, status = ? where blogId = ?",
      "params": [
        "tags",
        "blog_categories",
        "blogJson",
        "status",
        "blogId"
      ]
    },
    {
      "id": "blog.delete",
      "type": "delete",
      "table": "blog",
      "query": "delete from blog where blogId = ?",
      "params": [
        "blogId"
      ]
    },
    {
      "id": "diy.select.diyid",
      "type": "select",
      "query": "select id, diyId, tags, diyJson from diy where diyId = ?",
      "params": [
        "diyId"
      ]
    },
    {
      "id": "diy.insert",
      "type": "insert",
      "table": "diy",
      "query": "insert into diy(diyId, tags, diy_categories, diyJson, status ) values (?, ?, ?, ?, ?)",
      "params": [
        "diyId",
        "tags",
        "diy_categories",
        "diyJson",
        "status"
      ]
    },
    {
      "id": "diy.update",
      "type": "update",
      "table": "diy",
      "query": "update diy set tags = ?, diy_categories = ?, diyJson = ?, status = ? where diyId = ?",
      "params": [
        "tags",
        "diy_categories",
        "diyJson",
        "status",
        "diyId"
      ]
    },
    {
      "id": "diy.delete",
      "type": "delete",
      "table": "diy",
      "query": "delete from diy where diyId = ?",
      "params": [
        "diyId"
      ]
    },

    {
      "id": "sow.master.select.all",
      "type": "select",
      "table": "sow_master",
      "query": "select * from sow_master",
      "params": [],
      "jsonfields":[]
    },

    {
      "id": "proposal.sow.select.proposalversion",
      "type": "select",
      "table": "proposal_sow",
      "query": "select * from proposal_sow where proposalId = ? and version = ?",
      "params": ["proposalId","sowversion"],
      "jsonfields":[]
    },{
      "id": "proposal.sow.select.proposalversion.forPdf",
      "type": "select",
      "table": "proposal_sow",
      "query": "select * from proposal_sow where proposalId = ? and version = ? and ( L1S01 = 'Yes' or L1S01 ='No')",
      "params": ["proposalId","sowversion"],
      "jsonfields":[]
    },
    {
      "id": "proposal.sow.select.forpdfDownload",
      "type": "select",
      "table": "proposal_sow",
      "query": "select master.spaceType,sow.roomCode as roomcode, master.L1S01 as service,sow.L1S01 as serviceValue,master.L2S01 as relatedService1,sow.L2S01 as relatedServiceValue1, master.L2S02 as relatedService2,sow.L2S02 as relatedServiceValue2,master.L2S03 as relatedService3,sow.L2S03 as relatedServiceValue3, master.L2S04 as relatedService4,sow.L2S03 as relatedServiceValue4, master.L2S05 as relatedService5, sow.L2S05 as relatedServiceValue5,master.L2S06 as relatedService6,sow.L2S06 as relatedServiceValue6 from sow_master master inner join (select * from proposal_sow where proposalId = ? and version = ?)sow on sow.spaceType = master.spaceType and sow.L1S01Code  = master.L1S01Code order by sow.spaceType,sow.roomCode,sow.L1S01Code",
      "params": ["proposalId","version"],
      "jsonfields":[]
    },
    {
      "id": "spaces.select.fromProductAndAddon",
      "type": "select",
      "table": "proposal_product",
      "query": "select distinct spaceType,roomCode,'product' as type from proposal_product where proposalId = ? and fromVersion = ? and active='A' union select distinct spaceType,roomcode,'addon' as type from proposal_addon where proposalId = ? and fromVersion = ? ",
      "params": ["proposalIdForPro","fromVerForProd","proposalIdForAddOn","fromVerForAddOn"],
      "jsonfields":[]
    },

    {
      "id": "proposal.sow.create",
      "type": "insert",
      "table": "proposal_sow",
      "query": "insert into proposal_sow(proposalId,version,spaceType,addonCode,roomcode,L1S01Code) select ?, ?, spaceType, 'addon', ?, L1S01Code from sow_master where spaceType = ?",
      "params": ["proposalId","version","roomcode","spaceType"],
      "jsonfields":[]
    },
    {
      "id": "proposal.sow.update",
      "type": "insert",
      "table": "proposal_sow",
      "query": "update proposal_sow set L1S01 = ?, L2S01 = ?, L2S02 = ?, L2S03 = ?, L2S04 = ?, L2S05 = ?, L2S06 = ? where proposalId =? and version = ? and spaceType = ? and roomcode = ? and L1S01Code = ? ",
      "params": ["L1S01","L2S01","L2S02","L2S03","L2S04","L2S05","L2S06","proposalId","version","spaceType","roomcode","L1S01Code"],
      "jsonfields":[]
    },
    {
      "id": "proposal.sow.delete",
      "type": "insert",
      "table": "proposal_sow",
      "query": "delete from proposal_sow where proposalId = ? and version = ? and roomcode = ? and spaceType = ?",
      "params": ["proposalId","version","roomcode","spaceType"],
      "jsonfields":[]
    },
    {
      "id": "proposal.sow.version.copy",
      "type": "insert",
      "table": "proposal_sow",
      "query": "insert into proposal_sow(proposalId,version,spaceType,roomcode,addonCode,L1S01Code,L1S01,L2S01,L2S02,L2S03,L2S04,L2S05,L2S06) select proposalId,'2.0',spaceType,roomcode,addonCode,L1S01Code,L1S01,L2S01,L2S02,L2S03,L2S04,L2S05,L2S06 from proposal_sow where proposalId = ?;",
      "params": ["proposalId"],
      "jsonfields":[]
    },

    {
      "id": "select.sowservicemap",
      "type": "select",
      "table": "sow_service_map",
      "query": "select  psow.spaceType,psow.L1S01Code,mp.addonCode  from (select spaceType,L1S01Code,addonCode from proposal_sow where proposalId = ?  and version = ? and L1S01 = 'Yes')psow inner join sow_service_map mp on mp.L1S01Code = psow.L1S01Code",
      "params": ["proposalId","sowversion"],
      "jsonfields":[]
    },

    {
      "id": "select.proposalAddOns",
      "type": "select",
      "table": "proposal_addon",
      "query": "select addon.spaceType,addon.roomCode as roomcode, mp.L1S01Code as L1S01Code ,addon.code as code from (select * from proposal_addon   where proposalId = ?  and fromVersion = ? and categoryCode in ('Appliances','Counter Top','Services'))addon left outer join sow_service_map mp on mp.addOnCode = addon.code and mp.spaceType = addon.spaceType",
      "params": ["proposalId","fromVersion"],
      "jsonfields":[]
    },
    {
      "id":"select.customAddons",
      "type":"select",
      "table":"proposal_addon",
      "query":"select addon.spaceType,addon.roomCode as roomcode, sow.L1S01Code as L1S01Code ,addon.customAddonCategory from (select * from proposal_addon   where proposalId = ?  and fromVersion =? and categoryCode in ('Custom Addon'))addon left outer join categorySpaceMap custom on custom.category = addon.customAddonCategory and custom.spaceType = addon.spaceType inner join sow_master sow on sow.spaceType = custom.spaceType and sow.L1S01 = custom.category",
      "params":["proposalId","fromVersion"],
      "jsonfields":[]
    },{
      "id": "select.proposalAddOns.sow",
      "type": "select",
      "table": "proposal_addon",
      "query": "select spaceType,roomcode,code,categoryCode from proposal_addon   where proposalId = ?  and fromVersion = ? and categoryCode in ('Appliances','Counter Top','Services')",
      "params": ["proposalId","fromVersion"],
      "jsonfields":[]
    },
    {
      "id": "sow.master.select.all",
      "type": "select",
      "table": "sow_master",
      "query": "select * from sow_master",
      "params": [],
      "jsonfields":[]
    },

    {
      "id": "proposal.sow.select.space.rooms",
      "type": "select",
      "table": "proposal_sow",
      "query": "select distinct spaceType,roomcode from proposal_sow where proposalId = ? and version = ?",
      "params": ["proposalId","sowversion"],
      "jsonfields":[]
    },
    {
      "id": "proposal.duplicatecrm",
      "type": "select",
      "table": "proposal",
      "query": "select * from proposal where crmId = ? and status != 'Deleted';",
      "params": ["crmId"]
    },

    {
      "id": "proposal.header.updatesowremarksv1",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set sowremarksv1 = ? where id  = ?",
      "params": ["newsowremarks","id"]
    },
    {
      "id": "proposal.header.updatesowremarksv2",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set sowremarksv2 = ? where id  = ?",
      "params": ["newsowremarks","id"]
    },
    {
      "id": "proposal.select.sow.v2",
      "type": "select",
      "table": "proposal_sow",
      "query": "select * from proposal_sow where proposalId = ? and version = ?",
      "params": ["proposalId","version"]
    },
    {
      "id": "proposal.product.crm",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where proposalId =?",
      "params": ["proposalId"],
      "jsonfields":[]
    },
    {
      "id": "dw_module_component.insert",
      "type": "insert",
      "table": "dw_module_component",
      "query": "insert into dw_module_component (proposalId, version, priceDate, businessDate, region, spaceType, room, prId, prTitle, moduleType, moduleSeq, moduleCode, compType, compCode, compTitle, compPrice, compWoTax, compCost, compProfit, compMargin) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",
      "params": ["proposalId","version","priceDate","businessDate","region","spaceType","room","prId","prTitle","moduleType","moduleSeq","moduleCode","compType","compCode","compTitle","compPrice","compWoTax","compCost","compProfit","compMargin"],
      "jsonfields":[]
    },

    {
      "id": "dw_product_module.insert",
      "type": "insert",
      "table": "dw_product_module",
      "query": "insert into dw_product_module (proposalId, version, proposalTitle, priceDate, businessDate, region, spaceType, room, prId, prTitle, moduleSeq, moduleCode, description, width, depth, height, moduleCategory, handleSize, handleQty, carcass, finish, finishMaterial, color, exposedLeft, exposedRight, exposedBottom, exposedTop, exposedBack, exposedOpen, noOfAccPacks, moduleArea, ccPrice, ccWoTax, ccCost, ccProfit, ccMargin, shPrice, shWoTax, shCost, shProfit, shMargin, hwPrice, hwWoTax, hwCost, hwProfit, hwMargin, accPrice, accWoTax, accCost, accProfit, accMargin, handlePrice, handleWoTax, handleCost, handleProfit, handleMargin, hingePrice, hingeWoTax, hingeCost, hingeProfit, hingeMargin, lrPrice, lrWoTax, lrCost, lrProfit, lrMargin, modulePrice, moduleWoTax, moduleCost, moduleProfit, moduleMargin) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",
      "params": ["proposalId","version","proposalTitle","priceDate","businessDate","region","spaceType","room","prId","prTitle","moduleSeq","moduleCode","description","width","depth","height","moduleCategory","handleSize","handleQty","carcass","finish","finishMaterial","color","exposedLeft","exposedRight","exposedBottom","exposedTop","exposedBack","exposedOpen","noOfAccPacks","moduleArea","ccPrice","ccWoTax","ccCost","ccProfit","ccMargin","shPrice","shWoTax","shCost","shProfit","shMargin","hwPrice","hwWoTax","hwCost","hwProfit","hwMargin","accPrice","accWoTax","accCost","accProfit","accMargin","handlePrice","handleWoTax","handleCost","handleProfit","handleMargin","hingePrice","hingeWoTax","hingeCost","hingeProfit","hingeMargin","lrPrice","lrWoTax","lrCost","lrProfit","lrMargin","modulePrice","moduleWoTax","moduleCost","moduleProfit","moduleMargin"],
      "jsonfields":[]
    },
    {
      "id": "dw_proposal.insert",
      "type": "insert",
      "table": "dw_proposal",
      "query": "insert into dw_proposal (proposalId, version, proposalTitle, region, projectName, designerName, salesName, designPartnerName, proposalUpdatedBy, proposalCreateDate, proposalPriceDate, businessDate, versionCreatedBy, versionCreatedOn, versionUpdatedBy, versionUpdatedOn, stdModuleCount, nStdModuleCount, hikeModuleCount, vrPrice, vrPriceAfterDiscount, vrPriceAfterTax, vrCost, vrProfit, vrMargin, prPrice, prPriceAfterDiscount, prPriceAfterTax, prCost, prProfit, prMargin, wwPrice, wwPriceAfterDiscount, wwPriceAfterTax, wwCost, wwProfit, wwMargin, bpPrice, bpPriceAfterDiscount, bpPriceAfterTax, bpCost, bpProfit, bpMargin, svPrice, svPriceAfterDiscount, svPriceAfterTax, svCost, svProfit, svMargin, kitchenCount, wardrobeCount, NSproductCount, bpCount, svCount, stdModulePrice, nStdModulePrice, hikeModulePrice, hwPrice, hwPriceAfterTax, hwPriceAfterDiscount, hwCost, hwProfit, hwMargin, accPrice, accPriceAfterTax, accPriceAfterDiscount, accCost, accProfit, accMargin, hkPrice, hkPriceAfterTax, hkPriceAfterDiscount, hkCost, hkProfit, hkMargin, hingePrice, hingePriceAfterTax, hingePriceAfterDiscount, hingeCost, hingeProfit, hingeMargin, lcPrice, lcPriceAfterTax, lcPriceAfterDiscount, lcCost, lcProfit, lcMargin, laPrice, laPriceAfterTax, laPriceAfterDiscount, laCost, laProfit, laMargin) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",
      "params":["proposalId","version","proposalTitle","region","projectName","designerName","salesName","designPartnerName","proposalUpdatedBy","proposalCreateDate","proposalPriceDate","businessDate","versionCreatedBy","versionCreatedOn","versionUpdatedBy","versionUpdatedOn","stdModuleCount","nStdModuleCount","hikeModuleCount","vrPrice","vrPriceAfterDiscount","vrPriceAfterTax","vrCost","vrProfit","vrMargin","prPrice","prPriceAfterDiscount","prPriceAfterTax","prCost","prProfit","prMargin","wwPrice","wwPriceAfterDiscount","wwPriceAfterTax","wwCost","wwProfit","wwMargin","bpPrice","bpPriceAfterDiscount","bpPriceAfterTax","bpCost","bpProfit","bpMargin","svPrice","svPriceAfterDiscount","svPriceAfterTax","svCost","svProfit","svMargin","kitchenCount","wardrobeCount","NSproductCount","bpCount","svCount","stdModulePrice","nStdModulePrice","hikeModulePrice","hwPrice","hwPriceAfterTax","hwPriceAfterDiscount","hwCost","hwProfit","hwMargin","accPrice","accPriceAfterTax","accPriceAfterDiscount","accCost","accProfit","accMargin","hkPrice","hkPriceAfterTax","hkPriceAfterDiscount","hkCost","hkProfit","hkMargin","hingePrice","hingePriceAfterTax","hingePriceAfterDiscount","hingeCost","hingeProfit","hingeMargin","lcPrice","lcPriceAfterTax","lcPriceAfterDiscount","lcCost","lcProfit","lcMargin","laPrice","laPriceAfterTax","laPriceAfterDiscount","laCost","laProfit","laMargin"],
      "jsonfields":[]
    },
    {
      "id": "dw_proposal_addon.insert",
      "type": "insert",
      "table": "dw_proposal_addon",
      "query": "insert into dw_proposal_addon (proposalId, version, proposalTitle, priceDate, businessDate, region, category, subCategory, addonId, spaceType, roomcode, code, productTypeCode, productSubtypeCode, product, brandCode, catalogueCode, quantity, uom, updatedBy, unitPrice, unitSourceCost, price, priceWoTax, sourceCost, addonProfit, addonMargin) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",
      "params": ["proposalId","version","proposalTitle","priceDate","businessDate","region","category","subCategory","addonId","spaceType","roomcode","code","productTypeCode","productSubtypeCode","product","brandCode","catalogueCode","quantity","uom","updatedBy","unitPrice","unitSourceCost","price","priceWoTax","sourceCost","addonProfit","addonMargin"],
      "jsonfields":[]
    },
    {
      "id": "dw_proposal_product.insert",
      "type": "insert",
      "table": "dw_proposal_product",
      "query": "insert into dw_proposal_product(proposalId, version, proposalTitle, priceDate, businessDate, region, category, subCategory, prId, prTitle, spaceType, room, baseCarcass, wallCarcass, finishMaterial, finish, shutterDesign, hinge, glass, handleSelection, noOfLengths, handleType, handleFinish, handleSize, knobType, knobFinish, prArea, prCreatedBy, prCreatedOn, prUpdatedBy, prUpdatedOn, prPrice, prPriceAfterDiscount, prPriceAfterTax, prCost, prProfit, prMargin, wwPrice, wwPriceAfterTax, wwCost, wwProfit, wwMargin, hwPrice, hwPriceAfterTax, hwCost, hwProfit, hwMargin, accPrice, accPriceAfterTax, accCost, accProfit, accMargin, laPrice, laPriceAfterTax, laCost, laProfit, laMargin, hkPrice, hkPriceAfterTax, hkCost, hkProfit, hkMargin, hingePrice, hingePriceAfterTax, hingeCost, hingeProfit, hingeMargin, lcPrice, lcPriceAfterTax, lcCost, lcProfit, lcMargin, installationCost, transportationCost, stdModuleCount, stdMPrice, nStdModuleCount, nStdMPrice, hikeModuleCount, hikeMPrice) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",
      "params": ["proposalId","version","proposalTitle","priceDate","businessDate","region","category","subCategory","prId","prTitle","spaceType","room","baseCarcass","wallCarcass","finishMaterial","finish","shutterDesign","hinge","glass","handleSelection","noOfLengths","handleType","handleFinish","handleSize","knobType","knobFinish","prArea","prCreatedBy","prCreatedOn","prUpdatedBy","prUpdatedOn","prPrice","prPriceAfterDiscount","prPriceAfterTax","prCost","prProfit","prMargin","wwPrice","wwPriceAfterTax","wwCost","wwProfit","wwMargin","hwPrice","hwPriceAfterTax","hwCost","hwProfit","hwMargin","accPrice","accPriceAfterTax","accCost","accProfit","accMargin","laPrice","laPriceAfterTax","laCost","laProfit","laMargin","hkPrice","hkPriceAfterTax","hkCost","hkProfit","hkMargin","hingePrice","hingePriceAfterTax","hingeCost","hingeProfit","hingeMargin","lcPrice","lcPriceAfterTax","lcCost","lcProfit","lcMargin","installationCost","transportationCost","stdModuleCount","stdMPrice","nStdModuleCount","nStdMPrice","hikeModuleCount","hikeMPrice"],
      "jsonfields":[]
    },
    {
      "id": "dw_proposal.delete",
      "type": "delete",
      "table": "dw_proposal",
      "query": "delete from dw_proposal where proposalId = ? and version = ?",
      "params": ["proposalId","version"],
      "jsonfields":[]
    },
    {
      "id": "dw_proposal_product.delete",
      "type": "delete",
      "table": "dw_proposal_product",
      "query": "delete from dw_proposal_product where proposalId = ? and version = ?",
      "params": ["proposalId","version"],
      "jsonfields":[]
    },
    {
      "id": "dw_proposal_addon.delete",
      "type": "delete",
      "table": "dw_proposal_addon",
      "query": "delete from dw_proposal_addon where proposalId = ? and version = ?",
      "params": ["proposalId","version"],
      "jsonfields":[]
    },
    {
      "id": "dw_product_module.delete",
      "type": "delete",
      "table": "dw_product_module",
      "query": "delete from dw_product_module where proposalId = ? and version = ?",
      "params": ["proposalId","version"],
      "jsonfields":[]
    },
    {
      "id": "proposal.product.productlibraydelete",
      "type": "delete",
      "table": "product_library",
      "query": "update product_library set active='N' where id=?",
      "params": ["id"]
    },
    {
      "id": "proposal.offer.offername",
      "type": "select",
      "table": "OfferMaster",
      "query": "select * from OfferMaster where fromDate <= ? and toDate >= ?",
      "params": ["fromDate","toDate"]
    },
    {
      "id": "proposal.discount.discountAmount",
      "type": "select",
      "table": "price_master",
      "query": "select * from price_master where rateId='F:DP' and fromDate <= ? and toDate >= ?",
      "params": ["fromDate","toDate"]
    },
    {
      "id": "proposal.versiondiscount",
      "type": "update",
      "table": "version_master",
      "query": "update version_master set discountPercentage = ?,businessDate=? where proposalId=? and version= ? ",
      "params": ["discountPercentage","businessDate","proposalId","version"]
    },
    {
      "id": "proposal.finishType",
      "type": "select",
      "table": "finish_master",
      "query": "select distinct(finishMaterial) from finish_master where fromDate <= ? and toDate >= ? order by sequence",
      "params": ["fromDate","toDate"]
    },
    {
      "id": "proposal.oldnewfinishmapping",
      "type": "select",
      "table": "oldnew_finishmap",
      "query": "select newCode,oldCode,flag from oldnew_finishmap",
      "params": []
    },
    {
      "id": "proposal.getnewfinishmap",
      "type": "select",
      "table": "oldnew_finishmap",
      "query": "select * from oldnew_finishmap where oldCode = ?",
      "params": ["oldCode"]
    }
  ]
}