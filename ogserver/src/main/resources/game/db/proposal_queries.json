{
  "queries": [
    {
      "id": "proposal.list.status",
      "type": "select",
      "table": "proposal",
      "query": "select id, crmId, version, quoteNo, quoteNoNew, title, status, salesName, designerName,designPartnerName, amount, projectName, pcity, createdOn, createdBy, updatedOn, updatedBy from proposal where status = ?",
      "params": ["status"]
    },

    {
      "id": "proposal.list.all",
      "type": "select",
      "table": "proposal",
      "query": "select 'W' as editFlag, id, crmId, version, quoteNo, quoteNoNew, title, status, salesName, designerName,designPartnerName, amount, projectName, pcity, createdOn, createdBy, updatedOn, updatedBy from proposal where status != 'deleted'",
      "params": []
    },

    {
      "id": "proposal.list.sales",
      "type": "select",
      "table": "proposal",
      "query": "select IF(salesEmail = ?, 'W', 'R') as editFlag, id, crmId, version, quoteNo, quoteNoNew, title, status, salesName, designerName,designPartnerName, amount, projectName, pcity, createdOn, createdBy, updatedOn, updatedBy from proposal where status != 'deleted'",
      "params": ["userId"]
    },

    {
      "id": "proposal.list.designer",
      "type": "select",
      "table": "proposal",
      "query": "select IF(designerEmail = ?, 'W', 'R') as editFlag, id, crmId, version, quoteNo, quoteNoNew, title, status, salesName, designerName,designPartnerName, amount, projectName, pcity, createdOn, createdBy, updatedOn, updatedBy from proposal where status != 'deleted'",
      "params": ["userId"]
    },

    {
      "id": "proposal.list.designpartner",
      "type": "select",
      "table": "proposal",
      "query": "select id, crmId, version, quoteNo, quoteNoNew, title, status, salesName, designerName, designPartnerName, amount, projectName, pcity, createdOn, createdBy, updatedOn, updatedBy from proposal where designPartnerEmail = ?",
      "params": ["designPartnerEmail"]
    },

    {
      "id": "proposal.list.crmid",
      "type": "select",
      "table": "proposal",
      "query": "select crmId from proposal where status != 'deleted'",
      "params": []
    },


    {
      "id": "proposal.updateversion",
      "type": "update",
      "table": "version_master",
      "query": "update version_master set title = ?,finalAmount = ? , status = ? , internalStatus = ?, remarks = ? , fromVersion = ? , discountAmount = ? , discountPercentage = ? , amount = ? where version = ? and proposalId = ? ",
      "params": ["title","finalAmount", "status", "internalStatus", "remarks","fromVersion" , "discountAmount" , "discountPercentage","amount","version","proposalId"]
    },

    {
      "id": "proposal.summary",
      "type": "select",
      "table": "proposal",
      "query": "select status, count(*) as proposal_count from proposal where status = 'deleted' group by status",
      "params": []
    },
    {
      "id": "proposal.header",
      "type": "select",
      "table": "proposal",
      "query": "select * from proposal where id = ?",
      "params": ["id"]
    },

    {
      "id": "proposal.create",
      "type": "insert",
      "table": "proposal",
      "query": "insert into proposal(status, title, version, createdBy, crmId) values ('Deleted', '', '0.1', ?, ?)",
      "params": ["createdBy","opportunityId"]
    },

    {
      "id": "proposal.create.crm",
      "type": "insert",
      "table": "proposaltemp",
      "query": "insert into proposal(status, title, version, createdBy, crmId, cname, designerName, salesExecName,fullJson) values ('draft', ?, '1.0', ?, ?, ?, ?, ?, ?)",
      "params": ["title", "createdBy","opportunityId", "designerName", "salesExecName", "fullJson" ]
    },

    {
      "id": "version.createdraft",
      "type": "insert",
      "table": "version_master",
      "query": "insert into version_master(version, fromVersion, proposalId, title, status, internalStatus, finalAmount, remarks,discountAmount,discountPercentage,amount) values (0.1, ?, ?, ?, 'Draft', 'Draft', 0.0, '',0.0,0.0,0.0)",
      "params": ["fromVersion", "proposalId", "title"]
    },

    {
      "id": "version.createPostSalesInitial",
      "type": "insert",
      "table": "version_master",
      "query": "insert into version_master(version, fromVersion, proposalId, title, status, internalStatus, finalAmount, remarks,discountAmount,discountPercentage,amount) values (1.0, ?, ?, ? , 'Draft', 'Draft', 0.0, 'Provide Option Description',0.0,0.0,0.0)",
      "params": ["fromVersion", "proposalId", "title"]
    },

    {
      "id": "proposal.update",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set title = ?, crmId = ?, quoteNo = ?, quoteNoNew = ?, cname = ?, caddress1 = ?, caddress2 = ?, caddress3 = ?, ccity = ?, cemail = ?, cphone1 = ?, cphone2 = ?, projectName = ?, paddress1 = ?, paddress2 = ?, pcity = ?, salesName = ?, salesEmail = ?, salesPhone = ?,  designerName = ?, designerEmail = ?, designerPhone = ?, designPartnerName = ?, designPartnerEmail = ?, designPartnerPhone = ?, amount = ?, updatedBy = ?, status = ?, version = ? where id = ?",
      "params": ["title", "crmId", "quoteNo", "quoteNoNew", "cname", "caddress1", "caddress2", "caddress3", "ccity", "cemail", "cphone1", "cphone2", "projectName", "paddress1", "paddress2", "pcity", "salesName", "salesEmail", "salesPhone", "designerName", "designerEmail", "designerPhone", "designPartnerName", "designPartnerEmail", "designPartnerPhone", "amount", "updatedBy", "status", "version", "id"]
    },

    {
      "id": "proposal.update.onconfirm",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set title = ?, crmId = ?, quoteNo = ?, quoteNoNew = ?, cname = ?, caddress1 = ?, caddress2 = ?, caddress3 = ?, ccity = ?, cemail = ?, cphone1 = ?, cphone2 = ?, projectName = ?, paddress1 = ?, paddress2 = ?, pcity = ?, salesName = ?, salesEmail = ?, salesPhone = ?,  designerName = ?, designerEmail = ?, designerPhone = ?, designPartnerName = ?, designPartnerEmail = ?, designPartnerPhone = ?, amount = ?, updatedBy = ?, status = ?, version = ?, priceDate = ? where id = ?",
      "params": ["title", "crmId", "quoteNo", "quoteNoNew", "cname", "caddress1", "caddress2", "caddress3", "ccity", "cemail", "cphone1", "cphone2", "projectName", "paddress1", "paddress2", "pcity", "salesName", "salesEmail", "salesPhone", "designerName", "designerEmail", "designerPhone", "designPartnerName", "designPartnerEmail", "designPartnerPhone", "amount", "updatedBy", "status", "version", "priceDate", "id"]
    },

    {
      "id": "proposal.folder.update",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set folderPath = ? where id = ?",
      "params": ["folderPath", "id"]
    },

    {
      "id": "version.publish",
      "type": "update",
      "table": "proposal",
      "query": "update version_master set status = 'Published', internalStatus = 'Published' where version = ? and proposalId = ?",
      "params": ["version","proposalId"]
    },

    {
      "id": "version.confirm",
      "type": "update",
      "table": "proposal",
      "query": "update version_master set status = 'Confirmed', internalStatus = 'Confirmed', version = ?, fromVersion = ? where version = ? and proposalId = ?",
      "params": ["version", "fromVersion", "toVersion", "proposalId"]
    },

    {
      "id": "version.designsignoff",
      "type": "update",
      "table": "proposal",
      "query": "update version_master set status = 'DSO', internalStatus = 'DSO', version = ?, fromVersion = ? where version = ? and proposalId = ?",
      "params": ["version", "fromVersion", "toVersion", "proposalId"]
    },

    {
      "id": "version.productionsignoff",
      "type": "update",
      "table": "proposal",
      "query": "update version_master set status = 'PSO', internalStatus = 'Locked', version = ?, fromVersion = ? where version = ? and proposalId = ?",
      "params": ["version", "fromVersion", "toVersion", "proposalId"]
    },

    {
      "id": "version.createversion",
      "type": "insert",
      "table": "version_master",
      "query": "insert into version_master(version, fromVersion, proposalId, title, status, internalStatus, finalAmount, remarks,discountPercentage,discountAmount,amount) values (?, ?, ?, ?, ?, ?, ?, ? , ? , ? , ?)",
      "params": ["version","fromVersion","proposalId", "title","status","internalStatus","finalAmount","remarks","discountPercentage","discountAmount","amount"]
    },

    {
      "id": "version.copyversion",
      "type": "insert",
      "table": "version_master",
      "query": "insert into version_master(version, fromVersion, proposalId, title, status, internalStatus, finalAmount, remarks,discountPercentage,discountAmount,amount) values (?, ?, ?, ?, ?, ?, ?, ? , ? , ? , ?)",
      "params": ["version","fromVersion","toVersion", "discountAmount","discountPercentage"]
    },

    {
      "id": "version.lockallpresalesversions",
      "type": "update",
      "table": "version_master",
      "query": "update version_master set internalStatus = ? where version like '0.%' and proposalId = ?",
      "params": ["internalStatus","proposalId"]
    },

    {
      "id": "version.lockallpostsalesversions",
      "type": "update",
      "table": "version_master",
      "query": "update version_master set internalStatus = ? where version like '1.%' and proposalId = ?",
      "params": ["internalStatus","proposalId"]
    },

    {
      "id": "version.lockallversions",
      "type": "update",
      "table": "version_master",
      "query": "update version_master set internalStatus = ? where version like '2.%' and proposalId = ? ",
      "params": ["internalStatus","proposalId"]
    },

    {
      "id": "version.getlatestversion",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where version=(select MAX(version) from version_master where proposalId = ?) and proposald = ? ",
      "params": ["proposalId","proposalId"]
    },
    {
      "id": "version.getlatestversionTemproary",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where proposalId = ? and version = ?",
      "params": ["proposalId","version"]
    },

    {
      "id": "proposal.version.presales",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where version like '0.%' and proposalId = ?",
      "params": ["proposalId"]
    },

    {
      "id": "proposal.version.postsales",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where version like '1.%' and proposalId = ?",
      "params": ["proposalId"]
    },

    {
      "id": "proposal.version.production",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where version like '2.%' and proposalId = ?",
      "params": ["proposalId"]
    },


    {
      "id": "proposal.publish",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set status = 'published' where id = ?",
      "params": ["id"]
    },

    {
      "id": "proposal.revise",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set status = 'Draft' where id = ?",
      "params": ["id"]
    },
    {
      "id": "proposal.cancel",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set status = 'cancelled' where id = ?",
      "params": ["id"]
    },
    {
      "id": "proposal.delete",
      "type": "update",
      "table": "proposal",
      "query": "update proposal set status = 'deleted' where id = ?",
      "params": ["id"]
    },

    {
      "id": "proposal.comment.insert",
      "type": "insert",
      "table": "proposal_comments",
      "query": "insert into proposal_comments (id, proposalid, comment, userid, username, createdon) values (?, ?, ?, ?, ?, ?)",
      "params": ["id", "proposalid", "comment", "userid", "username", "createdon"]
    },

    {
      "id": "proposal.comment.select",
      "type": "select",
      "table": "proposal_comments",
      "query": "select * from proposal_comments where proposalId = ?",
      "params": ["proposalId"]
    },

    {
      "id": "proposal.document.add",
      "type": "insert",
      "table": "proposal_documents",
      "query": "insert into proposal_documents (proposalId, title, fileName, attachmentType, uploadedBy) values (?, ?, ?, ?, ?)",
      "params": ["proposalId", "title", "fileName", "attachmentType", "uploadedBy"]
    },

    {
      "id": "proposal.document.remove",
      "type": "delete",
      "table": "proposal_documents",
      "query": "delete from proposal_documents where id = ?",
      "params": ["id"]
    },

    {
        "id":"proposal.id",
        "type":"select",
        "table":"proposal",
        "query":"SELECT id FROM proposal ORDER BY id DESC LIMIT 1",
        "params":[]

    },

    {
      "id": "proposal.document.select",
      "type": "select",
      "table": "proposal_documents",
      "query": "select * from proposal_documents where proposalId = ? and productId = 0",
      "params": ["proposalId"]
    },

    {
      "id": "product.document.add",
      "type": "insert",
      "table": "proposal_documents",
      "query": "insert into proposal_documents (proposalId, productId, title, fileName, attachmentType, uploadedBy) values (?, ?, ?, ?, ?, ?)",
      "params":["proposalId", "productId", "title", "fileName", "attachmentType", "uploadedBy"]
    },

    {
      "id": "product.document.select",
      "type": "select",
      "table": "proposal_documents",
      "query": "select * from proposal_documents where productId = ?",
      "params": ["productId"]
    },

    {
      "id": "product.document.remove",
      "type": "delete",
      "table": "proposal_documents",
      "query": "delete from proposal_documents where id = ?",
      "params": ["id"]
    },

    {
      "id": "proposal.version.addon.list",
      "type": "select",
      "table": "proposal_addon",
      "query": "select * from proposal_addon where proposalId = ? and fromVersion = ?",
      "params": ["proposalId","fromVersion"]
    },

    {
      "id": "proposal.addon.selected.detail",
      "type": "select",
      "table": "proposal_addon",
      "query": "select * from proposal_addon where proposalId = ? and id in (?)",
      "params": ["proposalId", "addonIds"]
    },

    {
      "id": "proposal.addon.remove",
      "type": "delete",
      "table": "proposal_addon",
      "query": "delete from proposal_addon where id = ?",
      "params": ["id"]
    },

    {
      "id": "proposal.addon.add",
      "type": "insert",
      "table": "proposal_addon",
      "query": "insert into proposal_addon(proposalId, fromVersion, seq, code, categoryCode, productTypeCode, productSubtypeCode, brandCode, product, catalogueCode, title, rate, quantity, amount, uom, updatedBy) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
      "params":["proposalId", "fromVersion", "seq", "code", "categoryCode", "productTypeCode", "productSubtypeCode", "brandCode", "product", "catalogueCode", "title", "rate", "quantity", "amount", "uom", "updatedBy"]
    },

    {
      "id": "proposal.addon.list",
      "type": "select",
      "table": "proposal_addon",
      "query": "select *from proposal_addon where proposalId=? and fromVersion=?",
      "params":["proposalId", "fromVersion"]
    },

    {
      "id": "proposal.addon.update",
      "type": "update",
      "table": "proposal_addon",
      "query": "update proposal_addon set seq = ?, code = ?, categoryCode = ?, productTypeCode = ?, brandCode = ?, catalogueCode = ?, title = ?, rate = ?, quantity = ?, amount = ?, uom = ?, updatedBy = ? where id = ?",
      "params": ["seq", "code", "categoryCode", "productTypeCode", "brandCode", "catalogueCode", "title", "rate", "quantity", "amount", "uom", "updatedBy", "id"]
    },

    {
      "id": "module.select.all",
      "type": "select",
      "table": "module_master",
      "query": "select code, width, depth, height, description, imagePath, moduleType, moduleCategory, productCategory, material, unitType, accessoryPackDefault, remarks from module_master",
      "params": []
    },

    //Proposal product line item queries

    {
      "id": "proposal.product.create",
      "type": "insert",
      "table": "proposal_product",
      "query": "insert into proposal_product (proposalId,fromVersion, title, seq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, designCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy, costWoAccessories) values (?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?)",
      "params": ["proposalId","fromVersion", "title", "seq", "type", "roomCode", "productCategoryCode", "catalogueId", "catalogueName", "makeTypeCode",
        "baseCarcassCode", "wallCarcassCode", "finishTypeCode", "finishCode", "designCode", "dimension", "quantity", "amount", "quoteFilePath",
        "modules", "addons", "createdBy", "costWoAccessories"]
    },

    {
      "id": "proposal.product.updateVersionOnConfirm",
      "type": "update",
      "table": "proposal_product",
      "query": "update proposal_product set fromVersion = ? where proposalId = ? and fromVersion = ?",
      "params": ["version","proposalId","fromVersion"]
    },

    {
      "id": "proposal.product.createnew",
      "type": "insert",
      "table": "proposal_product",
      "query": "insert into proposal_product (proposalId,fromVersion, title, seq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, designCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy, costWoAccessories) select proposalId, ?, title, seq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, designCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy, costWoAccessories from proposal_product where proposalId= ? and fromVersion = ? and active = 'A'",
      "params": ["toVersion","proposalId","fromVersion"]
    },

    {
      "id": "proposal.addon.createnew",
      "type": "insert",
      "table": "proposal_addon",
      "query": "insert into proposal_addon (proposalId,fromVersion, title, seq, code, categoryCode, productTypeCode, productSubtypeCode, brandCode, product, catalogueCode, rate, quantity, amount, uom, updatedBy) select proposalId, ?, title, seq, code, categoryCode, productTypeCode, productSubtypeCode, brandCode, product, catalogueCode, rate, quantity, amount, uom, updatedBy from proposal_addon where proposalId= ? and fromVersion = ? ",
      "params": ["toVersion","proposalId","fromVersion"]
    },

    {
      "id": "proposal.product.createnewfromoldproposal",
      "type": "insert",
      "table": "proposal_product",
      "query": "insert into proposal_product (proposalId,fromVersion, title, seq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, designCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy, costWoAccessories) select ?,?, title, seq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, designCode, dimension, quantity, amount, quoteFilePath, modules, addons, createdBy, costWoAccessories from proposal_product where proposalId = ? and fromVersion = ? and active = 'A'",
      "params": ["proposalId","version","oldProposalId","toVersion"]
    },

    {
      "id": "proposal.addon.createnewfromoldproposal",
      "type": "insert",
      "table": "proposal_addon",
      "query": "insert into proposal_addon (proposalId,fromVersion, title, seq, code, categoryCode, productTypeCode, productSubtypeCode, brandCode, product, catalogueCode, rate, quantity, amount, uom, updatedBy) select ?, ?, title, seq, code, categoryCode, productTypeCode, productSubtypeCode, brandCode, product, catalogueCode, rate, quantity, amount, uom, updatedBy from proposal_addon where proposalId = ? and fromVersion = ? ",
      "params": ["proposalId","version","oldProposalId","toVersion"]
    },

    {
      "id": "proposal.addon.updateVersionOnConfirm",
      "type": "update",
      "table": "proposal_addon",
      "query": "update proposal_addon set fromVersion = ? where proposalId = ? and fromVersion = ?",
      "params": ["version","proposalId","fromVersion"]
    },

    {
      "id": "proposal.product.update",
      "type": "update",
      "table": "proposal_product",
      "query": "update proposal_product set seq = ?, title = ?, roomCode = ?, productCategoryCode = ?, catalogueId = ?, catalogueName = ?, makeTypeCode = ?, baseCarcassCode = ?, wallCarcassCode = ?, finishTypeCode = ?, finishCode = ?, designCode = ?, dimension = ?, quantity = ?, amount = ?, quoteFilePath = ?, modules = ?, addons = ?, updatedBy = ?, costWoAccessories = ?, fromVersion = ? where id = ?",
      "params": ["seq", "title", "roomCode", "productCategoryCode", "catalogueId", "catalogueName", "makeTypeCode", "baseCarcassCode", "wallCarcassCode", "finishTypeCode", "finishCode", "designCode", "dimension", "quantity", "amount", "quoteFilePath", "modules", "addons", "updatedBy", "costWoAccessories", "fromVersion", "id"]
    },

    {
      "id": "proposal.product.updatesequence",
      "type": "update",
      "table": "proposal_product",
      "query": "update proposal_product set seq=? where id=?",
      "params": ["seq","id"]
    },

    {
      "id": "proposal.product.delete",
      "type": "delete",
      "table": "proposal_product",
      "query": "update proposal_product set active = 'N' where id = ?",
      "params": ["id"]
    },

    {
      "id": "proposal.product.list",
      "type": "select",
      "table": "proposal_product",
      "query": "select id, fromVersion, title, seq, type, roomCode, productCategoryCode, catalogueId, catalogueName, makeTypeCode, baseCarcassCode, wallCarcassCode, finishTypeCode, finishCode, dimension, quantity, amount, quoteFilePath, createdOn, createdBy, updatedOn, updatedBy, costWoAccessories from proposal_product where proposalId = ? and active = 'A'",
      "params": ["proposalId"]
    },
    {
      "id": "proposal.product.versionlist",
      "type": "select",
      "table": "proposal_product",
      "query": "select * from proposal_product where proposalId = ? and fromVersion = ? and active = 'A'",
      "params": ["proposalId","fromVersion"],
      "jsonfields":["modules", "addons"]
    },

    {
      "id": "proposal.versions.list",
      "type": "select",
      "table": "version_master",
      "query": "select * from version_master where proposalId = ? ",
      "params": ["proposalId"]
    },

    {
      "id": "proposal.product.all.detail",
      "type": "select",
      "table": "proposal_product",
      "query": "select * from proposal_product where proposalId = ? and fromVersion = ? and active = 'A' order by seq",
      "params": ["proposalId","fromVersion"],
      "jsonfields":["modules", "addons"]
    },

    {
      "id": "proposal.product.selected.detail",
      "type": "select",
      "table": "proposal_product",
      "query": "select * from proposal_product where proposalId = ? and active = 'A' and id in (?) order by seq",
      "params": ["proposalId", "productIds"],
      "jsonfields":["modules", "addons"]
    },

    {
      "id": "proposal.product.detail",
      "type": "select",
      "table": "proposal_product",
      "query": "select * from proposal_product where id = ? and fromVersion = ?",
      "params": ["id","fromVersion"],
      "jsonfields":["modules", "addons"]
    },
    {
      "id": "proposal.product.versionlist",
      "type": "select",
      "table": "proposal_product",
      "query": "select * from proposal_product where proposalId = ? and fromVersion = ? and active = 'A' order by seq",
      "params": ["proposalId","fromVersion"],
      "jsonfields":["modules", "addons"]
    },


    // Module costing queries
    {
      "id": "module.components.select",
      "type": "select",
      "table": "module_components",
      "query": "select * from module_components where modulecode = ?",
      "params": ["modulecode"]
    },
    {
      "id": "module.components.select.all",
      "type": "select",
      "table": "module_components",
      "query": "select * from module_components ",
      "params": []
    },
    {
      "id": "module.carcass.cost",
      "type": "select",
      "table": "module_components",
      "query": "select sum(cm.area * mr.rate * mc.quantity) as cost from module_components mc, carcass_master cm, mf_rate_master mr where mc.modulecode = ? and mc.comptype = 'C' and mc.compcode = cm.code and mr.type = 'C' and mr.mfcode = ? and mr.thickness = cm.thickness",
      "params": ["modulecode", "material"]
    },
    {
      "id": "module.shutter.cost",
      "type": "select",
      "table": "module_components",
      "query": "select sum(sfx.cuttingarea * mr.rate * mc.quantity) as cost from module_components mc, shutter_finish_xref sfx, mf_rate_master mr where mc.modulecode = ? and mc.comptype = 'S' and mc.compcode = sfx.shuttercode and mr.type = 'S' and mr.mfcode = ? and mr.thickness = sfx.cuttingt",
      "params": ["modulecode", "finishtype"]
    },
    {
      "id": "module.acshw.cost",
      "type": "select",
      "table": "module_components",
      "query": "select sum(ahm.price * mc.quantity) as cost from module_components mc, acs_hw_master ahm where mc.modulecode = ? and mc.comptype in ('A', 'H') and mc.compcode = ahm.code",
      "params": ["modulecode"]
    },
    {
      "id": "carcass.select.all",
      "type": "select",
      "table": "carcass_master",
      "query": "select * from carcass_master",
      "params": []
    },
    {
      "id": "shutter.select.all",
      "type": "select",
      "table": "shutter_master",
      "query": "select code, title, plength, breadth, thickness, edgebinding, quantity from shutter_master",
      "params": []
    },
    {
      "id": "panel.select.all",
      "type": "select",
      "table": "panel_master",
      "query": "select * from panel_master",
      "params": []
    },

    {
      "id": "ratecard.distinct.select.all",
      "type": "select",
      "table": "ratecard_master",
      "query": "select distinct code,type from ratecard_master",
      "params": []
    },

    {
      "id": "pricemaster.select.all",
      "type": "select",
      "table": "price_master",
      "query": "select rateType,rateId,city,price,sourcePrice,fromDate,toDate from price_master",
      "params": []
    },

    {
      "id": "accessory.select.all",
      "type": "select",
      "table": "acc_hw_master",
      "query": "select code, title, catalogCode, make, imagePath, msp as price, uom, category from acc_hw_master where type = 'A'",
      "params": []
    },
    {
      "id": "hardware.select.all",
      "type": "select",
      "table": "acc_hw_master",
      "query": "select code, title, catalogCode, make, imagePath, msp as price, uom,category from acc_hw_master where type = 'H'",
      "params": []
    },

    {
      "id": "module.accessories.select",
      "type": "select",
      "table": "acc_hw_master",
      "query": "select ahm.title, ahm.make, ahm.imagePath from module_components mc, acc_hw_master ahm where mc.modulecode = ? and ahm.makeType = ? and mc.comptype = 'A' and mc.compcode = ahm.code",
      "params": ["mgCode", "makeType"]
    },

    {
      "id": "lookup.codes",
      "type": "select",
      "table": "code_master",
      "query": "select code, title, additionalType from code_master where lookupType = ? order by title",
      "params": ["lookupType"]
    },
    {
      "id": "finish.lookup",
      "type": "select",
      "table": "finish_master",
      "query": "select finishMaterial as additionalType, finishCode as code, title from finish_master",
      "params": []
    },
    {
      "id": "finish.master.all",
      "type": "select",
      "table": "finish_master",
      "query": "select costCode, finishCode, finishType, finishMaterial, design, shutterMaterial, colorGroupCode, cuttingOffset, title, edgeBinding, doubleExposedCostCode from finish_master",
      "params": []
    },

    {
      "id": "addons.categories",
      "type": "select",
      "table": "addon_master",
      "query": "select distinct categoryCode, rateReadOnly from addon_master",
      "params": []
    },

    {
      "id": "addons.product.types",
      "type": "select",
      "table": "addon_master",
      "query": "select distinct productTypeCode from addon_master where categoryCode = ?",
      "params": ["categoryCode"]
    },

    {
      "id": "addons.product.subtypes",
      "type": "select",
      "table": "addon_master",
      "query": "select distinct productSubtypeCode from addon_master where categoryCode = ? and productTypeCode = ?",
      "params": ["categoryCode", "productTypeCode"]
    },
    {
      "id": "addons.brands",
      "type": "select",
      "table": "addon_master",
      "query": "select distinct brandCode from addon_master where categoryCode = ? and productSubtypeCode = ? and productTypeCode = ?",
      "params": ["categoryCode", "productSubtypeCode", "productTypeCode"]
    },

    {
      "id": "addons.products",
      "type": "select",
      "table": "addon_master",
      "query": "select catalogueCode,title,product,code,rate,imagePath,uom from addon_master where categoryCode = ? and productTypeCode = ? and productSubtypeCode = ? and brandCode = ?",
      "params": ["categoryCode","productTypeCode","productSubtypeCode", "brandCode"]
    },

    {
      "id": "finish.codes",
      "type": "select",
      "table": "finish_master",
      "query": "select finishMaterial, finishCode, colorGroupCode, title from finish_master",
      "params": []
    },

    {
      "id": "color.codes",
      "type": "select",
      "table": "color_master",
      "query": "select code as code, code as name, imagePath from color_master where colorGroupCode = ? or 'ALL' = ? order by code",
      "params": ["colorGroupCode", "colorGroupCode"]
    },

    {
      "id": "colors.select.all",
      "type": "select",
      "table": "color_master",
      "query": "select code as code, code as name, imagePath from color_master order by colorGroupCode, code",
      "params": []
    },

    {
      "id": "product.select.productid",
      "type": "select",
      "query": "select id, productId, productJson from product where productId = ?",
      "params": [
        "productId"
      ]
    },
    {
      "id": "product.select.subcategory",
      "type": "select",
      "query": "select productJson from product where subcategoryId = ? ORDER BY productId",
      "params": ["subcategory"]
    },

    {
      "id": "acc_pack_master.select",
      "type": "select",
      "query": "select code, title from acc_pack_master",
      "params": []
    },

    {
      "id": "acc_pack_components.select",
      "type": "select",
      "query": "select apcode, type, code, qty from acc_pack_components",
      "params": []
    },

    {
      "id": "module_acc_pack.select",
      "type": "select",
      "query": "select apcode, mgcode from module_acc_pack",
      "params": []
    },

    {
      "id": "acc_addon_map.select",
      "type": "select",
      "query": "select apcode, addoncode from accpack_addon_map",
      "params": []
    },

    {
      "id": "accpacks.selectymodule",
      "type": "select",
      "query": "select code, title from acc_pack_master where code in (select apcode from module_acc_pack where mgcode = ?)",
      "params": ["mgCode"]
    },

    {
      "id": "addons.selectbyaccpack",
      "type": "select",
      "query": "select code, title, imagePath from acc_hw_master where type = 'A' and code in (select addoncode from accpack_addon_map where apcode = ?)",
      "params": ["apCode"]
    },

    {
      "id": "module.selectModulesByCategory",
      "type": "select",
      "query": "select distinct code, description, width, depth, height, productCategory, moduleCategory, moduleType, imagePath, accessoryPackDefault, remarks, unitType from module_master where (productCategory='all' or productCategory = ?) and moduleCategory = ?",
      "params": ["productCategory","moduleCategory"]
    },


    //city related queries
    {
      "id": "city.selectMonthCount",
      "type": "select",
      "query": "select * from city_master where curmonth= ? and city = ? ",
      "params": ["curmonth","city"]
    },

    {
      "id": "city.newCityQuote",
      "type": "insert",
      "query": "insert into city_master(city,curmonth,proposalId,quoteNo,cityLocked) values (?, ?, ?, ?, 'Yes')",
      "params": ["city","curmonth","proposalId","quoteNo"]
    },
    {
      "id": "city.selectCity",
      "type": "select",
      "query": "select * from city_master where proposalId= ?",
      "params": ["proposalId"]
    },
    {
      "id": "city.checkCity",
      "type": "select",
      "query": "select cityLocked from city_master where proposalId= ?",
      "params": ["proposalId"]
    },
    {
      "id": "addons.addonPriceDetails",
      "type": "select",
      "query": "select * from addon_master where code= ?",
      "params": ["code"]
    },
    {
      "id": "code.codelookup",
      "type": "select",
      "query": "select * from code_master where lookupType = ?",
      "params": ["lookupType"]
    },
    {
      "id": "code.additionalcodelookup",
      "type": "select",
      "query": "select * from code_master where lookupType = ? and additionalType = ?",
      "params": ["lookupType", "additionalType"]
    },

    {
      "id": "accessory.details",
      "type": "select",
      "table": "acc_pack_components",
      "query": "select apcode,type,code from acc_pack_components where apcode=? and type='A'",
      "params": ["apcode"]
    },
    {
      "id": "accessory.hwdetails",
      "type": "select",
      "table": "acc_pack_components",
      "query": "select apcode,type,code from acc_pack_components where apcode=? and type='H'",
      "params": ["apcode"]
    },
    {
      "id": "accessory.ratedetails",
      "type": "select",
      "table": "acc_hw_master",
      "query": "select id,type,code,title,make,category,imagePath,uom,cp,mrp,msp from acc_hw_master where code=?",
      "params": ["code"]
    },
    {
      "id": "transaction.insert",
      "type": "insert",
      "table": "transaction",
      "query": "insert into transaction (bankcode, txnid, net_amount_debit, amount, phone, productinfo, status, firstname, addedon, bank_ref_num, email, mihpayid, udf1, card_type, name_on_card, cardnum, fulldetails) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
      "params": [
        "bankcode",
        "txnid",
        "net_amount_debit",
        "amount",
        "phone",
        "productinfo",
        "status",
        "firstname",
        "addedon",
        "bank_ref_num",
        "email",
        "mihpayid",
        "udf1",
        "card_type",
        "name_on_card",
        "cardnum",
        "fulldetails"
      ]
    }
  ]
}
