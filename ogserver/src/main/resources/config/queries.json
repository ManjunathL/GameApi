{
  "queries": [
    {
      "id": "user_profile.insert",
      "type": "insert",
      "table": "user_profile",
      "query": "insert into user_profile (id, fbid, active, email, profile) values (?, 'A', ?, ?, ?)",
      "params": [
        "id",
        "fbid",
        "email",
        "profile"
      ]
    },
    {
      "id": "user_profile.update",
      "type": "update",
      "table": "user_profile",
      "query": "update user_profile set profile = ? where email = ?",
      "params": [
        "profile",
        "email"
      ]
    },
    {
      "id": "user_profile.remove",
      "type": "update",
      "table": "user_profile",
      "query": "update user_profile set active = 'I' where email = ?",
      "params": [
        "email"
      ]
    },
    {
      "id": "user_profile.select.email",
      "type": "select",
      "query": "select * from user_profile where email = ?",
      "params": [
        "email"
      ]
    },
    {
      "id": "event_log.insert",
      "type": "insert",
      "table": "event_log",
      "query": "insert into event_log (id, fbid, event_type, event_data) values (?, ?, ?, ?)",
      "params": [
        "id",
        "fbid",
        "event_type",
        "event_data"
      ]
    },
    {
      "id": "event_error.insert",
      "type": "insert",
      "table": "event_errors",
      "query": "insert into event_errors(id, fbid, event_type, event_data, reason) values (?, ?, ?, ?, ?)",
      "params": [
        "id",
        "fbid",
        "event_type",
        "event_data",
        "reason"
      ]
    },
    {
      "id": "enquiry.insert",
      "type": "insert",
      "table": "enquiries",
      "query": "insert into enquiries(id, fbid, uid, email, contactNumber, fullName, propertyName, requirements) values (?, ?, ?, ?, ?, ?, ?, ?)",
      "params": [
        "id",
        "fbid",
        "uid",
        "email",
        "contactNumber",
        "fullName",
        "propertyName",
        "requirements"
      ]
    },
    {
      "id": "product.select.all",
      "type": "select",
      "query": "select id, productId, productJson from product",
      "params": []
    },
    {
      "id": "product.select.productid",
      "type": "select",
      "query": "select id, productId, productJson from product where productId = ?",
      "params": [
        "productId"
      ]
    },
    {
      "id": "product.select.category",
      "type": "select",
      "query": "select id, productId, productJson from product where category = ?",
      "params": [
        "category"
      ]
    },
    {
      "id": "product.select.subcategory",
      "type": "select",
      "query": "select id, productId, productJson from product where subcategory = ?",
      "params": [
        "subcategory"
      ]
    },
    {
      "id": "product.select.related",
      "type": "select",
      "query": "select id, productId, productShortJson from product where category = ? and styleId = ? and productId != ?",
      "params": [
        "category",
        "styleId",
        "productId"
      ]
    },
    {
      "id": "product.insert",
      "type": "insert",
      "table": "product",
      "query": "insert into product(id, productId, name, description, category, subcategory, styleId, productShortJson, productJson) values (?, ?, ?, ?, ?, ?, ?, ?, ?)",
      "params": [
        "id",
        "productId",
        "name",
        "description",
        "category",
        "subcategory",
        "styleId",
        "productShortJson",
        "productJson"
      ]
    },
    {
      "id": "product.update",
      "type": "update",
      "table": "product",
      "query": "update product set name = ?, description = ?, category = ?, subcategory = ?, styleId = ?, productShortJson = ?, productJson = ? where productId = ?",
      "params": [
        "name",
        "description",
        "category",
        "subcategory",
        "styleId",
        "productShortJson",
        "productJson",
        "productId"
      ]
    },
    {
      "id": "shortlist.add",
      "type": "insert",
      "table": "shortlisted",
      "query": "insert into shortlisted(id, uid, email, productId, product) values (?, ?, ?, ?, ?)",
      "params": [
        "id",
        "uid",
        "email",
        "productId",
        "product"
      ]
    },
    {
      "id": "shortlist.remove",
      "type": "delete",
      "table": "shortlisted",
      "query": "delete from shortlisted where productId = ? and uid = ?",
      "params": [
        "productId",
        "uid"
      ]
    },

    {
      "id": "proposal.list",
      "type": "select",
      "table": "proposal",
      "query": "select proposalid, status, createdon, expectedby, completedon, wfstatus, wfassignedto, wfintime, priority, attention, title, designername, salesperson, budget, projectname, city from proposal where status = ?",
      "params": ["status"]
    },

    {
      "id": "proposal.summary",
      "type": "select",
      "table": "proposal_summary",
      "query": "select type, code, totalcount, totalamount from proposal_summary",
      "params": []
    },

    {
      "id": "proposal.workflow",
      "type": "select",
      "table": "proposal_wf_status",
      "query": "select id, proposalid, status, assignedto, intime, outtime from proposal_wf_status where proposalid = ? order by intime",
      "params": ["proposalid"]
    },

    {
      "id": "proposal.detail",
      "type": "select",
      "table": "proposal",
      "query": "select * from proposal where proposalid = ?",
      "params": ["proposalid"]
    },

    {
      "id": "proposal.comment.insert",
      "type": "insert",
      "table": "proposal_comments",
      "query": "insert into proposal_comments (id, proposalid, comment, userid, username, createdon) values (?, ?, ?, ?, ?, ?)",
      "params": ["id", "proposalid", "comment", "userid", "username", "createdon"]
    },

    {
      "id": "proposal.comment.select",
      "type": "select",
      "table": "proposal_comments",
      "query": "select * from proposal_comments where proposalid = ?",
      "params": ["proposalid"]
    },

    {
      "id": "proposal.document.insert",
      "type": "insert",
      "table": "proposal_documents",
      "query": "insert into proposal_documents (id, proposalid, title, description, url, userid, username, uploadedon) values (?, ?, ?, ?, ?, ?, ?, ?)",
      "params": ["id", "proposalid", "title", "description", "url", "userid", "username", "uploadedon"]
    },

    {
      "id": "proposal.document.select",
      "type": "select",
      "table": "proposal_documents",
      "query": "select * from proposal_documents where proposalid = ?",
      "params": ["proposalid"]
    },
    {
      "id": "game_user.insert",
      "type": "insert",
      "table": "game_user",
      "query": "insert into game_user (active, email, role, name, phone, salt, hash) values ('A', ?, ?, ?, ?, ?, ?)",
      "params": [
        "email",
        "role",
        "name",
        "phone",
        "salt",
        "hash"
      ]
    },
    {
      "id": "game_user.update_password",
      "type": "update",
      "table": "game_user",
      "query": "update game_user set salt = ?, hash = ? where email = ?",
      "params": [
        "salt",
        "hash",
        "email"
      ]
    },
    {
      "id": "game_user.select",
      "type": "select",
      "table": "game_user",
      "query": "select email, role, name, phone, salt, hash from game_user where email = ?",
      "params": [
        "email"
      ]
    }
  ]
}

